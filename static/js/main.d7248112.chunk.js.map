{"version":3,"sources":["services/hardware.js","services/fingerprint2.js","services/geo.js","Observation.js","TestingGround.js","services/geolocation_v2.js","services/calculations.js","trustworthy.js","Home.js","App.js","serviceWorker.js","index.js"],"names":["getLanguage","navigator","languages","length","userLanguage","language","browserLanguage","getLanguages","getTimezoneOffsetVsUTC","Date","getTimezoneOffset","getTimezone","Intl","DateTimeFormat","resolvedOptions","timeZone","err","geoHandler","geoHandlerOne","getHasLiedLanguages","substr","getHasLiedResolution","window","screen","width","availWidth","height","availHeight","getHasLiedOs","os","userAgent","toLowerCase","oscpu","platform","indexOf","maxTouchPoints","msMaxTouchPoints","plugins","getHasLiedBrowser","browser","productSub","errFirefox","tempRes","eval","toString","toSource","errOfErr","options","enableHighAccuracy","timeout","maximumAge","data","position","error","isGeoAvailable","successHandler","pos","console","log","crd","coords","concat","latitude","longitude","accuracy","errorHandler","reason","code","message","warn","successWatchHandler","getResultDeviceTrust","result","finger","tests","hasLiedIANATimezone","hasLiedTimeZoneOffset","parseInt","timezone","tz","String","offset","v","Observation","_ref","title","value","react_default","a","createElement","className","ObservationTest","_ref2","passed","JSON","stringify","exportToCSV","id","name","arrData","csvContent","heading","split","join","forEach","item","index","csvRow","encodedUri","encodeURI","link","document","setAttribute","body","appendChild","click","removeChild","dataObject","dataArray","map","hr","push","timestamp","TestingGround","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","errorOne","prevWatchPositions","prevOnePositions","handleWatchChanges","bind","assertThisInitialized","handleWatchClick","handleOneClick","handleOneChanges","downloadWatchCSV","downloadOneCSV","setState","newEntry","key","toConsumableArray","e","handler","geolocation","watchPosition","getCurrentPosition","event","stopPropagation","_this2","onClick","altitude","altitudeAccuracy","speed","Component","currentPositionAvgAccuracy","lastCurrentPosition","watchPositionAvgAccuracy","_successMessage","_testResultMessage","testFinished","_failMessage","getNoJittersCount","positions","jitters","getJitters","filter","j","getRealRefJitters","timestampRef","testWatchPositions","hasTimeRefDifferences","hasBadVelocity","hasBigPositionJumps","bad1mAccuracies","hasBadAccuracy","constLat","Set","constLong","constAcc","hasNoLatLongAccVariations","calcAverageAcc","objectSpread","avgAccuracyNotImproved","accuracies","improved","acc","i","trend","accuracyTrendImproves","getAccuracies","distances","calcCrow","bigJumps","validDistance","distance","_getInvalidDistances","lat1","lon1","lat2","lon2","dLat","toRad","dLon","_lat1","_lat2","Math","sin","cos","atan2","sqrt","PI","calculateVelocity","lat0","lon0","t2","t0","velocity","deltaX","deltaT","calcVelocity","timeDiffs","t2Ref","tDiff","velocities","velocitiesCurrent","latprev","lonprev","tprev","speeds","reduce","isTrustworthyDevice","webGlContext","getContext","rendererExtension","getExtension","webGlRenderer","getParameter","UNMASKED_RENDERER_WEBGL","isNotXcodeSimulator","Home","isTrustworthy","currentPositions","watchPositions","info","infoWatch","infoFinal","handleCurrentPosition","handleWatchPosition","currentTimerId","watchTimerId","self","setInterval","Error","geCurrentPosition","setTimeout","clearInterval","runCurrentPositionTest","positionData","getTime","noJitterCount","allSamplesCount","testCurrentPositions","startWatchTest","clearWatch","runWatchPositionTest","isTrusworthy","_getVideoCardInfo","gl","debugInfo","vendor","UNMASKED_VENDOR_WEBGL","renderer","getVideoCardInfo","videoCardVendor","videoCardRender","devicePixelRatio","hardwareConcurrency","React","vNo","process","Boolean","location","hostname","match","ReactDOM","render","react_router_dom","react_router","exact","path","component","getElementById","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.d7248112.chunk.js","sourcesContent":["export function getBrowserData() {\n    navigator.sayswho= (function(){\n        var ua= navigator.userAgent, tem,\n            M= ua.match(/(opera|chrome|safari|firefox|msie|trident(?=\\/))\\/?\\s*(\\d+)/i) || [];\n        if(/trident/i.test(M[1])){\n            tem=  /\\brv[ :]+(\\d+)/g.exec(ua) || [];\n            return 'IE '+(tem[1] || '');\n        }\n        if(M[1]=== 'Chrome'){\n            tem= ua.match(/\\b(OPR|Edge)\\/(\\d+)/);\n            if(tem!= null) return tem.slice(1).join(' ').replace('OPR', 'Opera');\n        }\n        M= M[2]? [M[1], M[2]]: [navigator.appName, navigator.appVersion, '-?'];\n        if((tem= ua.match(/version\\/(\\d+)/i))!= null) M.splice(1, 1, tem[1]);\n        return M.join(' ');\n    })();\n    \n    return navigator.sayswho;\n}\n\nexport function getVideoCardInfo() {\n    const gl = document.createElement('canvas').getContext('webgl');\n    if (!gl) {\n        return {\n            error: \"no webgl\",\n        };\n    }\n    const debugInfo = gl.getExtension('WEBGL_debug_renderer_info');\n    return debugInfo ? {\n        vendor: gl.getParameter(debugInfo.UNMASKED_VENDOR_WEBGL),\n        renderer:  gl.getParameter(debugInfo.UNMASKED_RENDERER_WEBGL),\n    } : {\n        error: \"no WEBGL_debug_renderer_info\",\n    };\n}\n\nexport function getLanguage() {\n    return (navigator.languages && navigator.languages.length) ? navigator.languages[0] : navigator.userLanguage || navigator.language || navigator.browserLanguage || 'en';\n}\nexport function getLanguages() {\n    return navigator.languages;\n}\n\nexport function getTimezoneOffsetVsUTC() {\n    return (new Date().getTimezoneOffset());\n}\nexport function getTimezone() {\n    try{\n        return Intl.DateTimeFormat().resolvedOptions().timeZone;\n    } catch(err){\n        return \"\";\n    }\n\n}","export const getAdBlock = function () {\n    var ads = document.createElement('div')\n    ads.innerHTML = '&nbsp;'\n    ads.className = 'adsbox'\n    var result = false\n    try {\n        // body may not exist, that's why we need try/catch\n        document.body.appendChild(ads)\n        result = document.getElementsByClassName('adsbox')[0].offsetHeight === 0\n        document.body.removeChild(ads)\n    } catch (e) {\n        result = false\n    }\n    return result\n};\nexport const getHasLiedLanguages = function () {\n    // We check if navigator.language is equal to the first language of navigator.languages\n    if (typeof navigator.languages !== 'undefined') {\n        try {\n            var firstLanguages = navigator.languages[0].substr(0, 2)\n            if (firstLanguages !== navigator.language.substr(0, 2)) {\n                return true\n            }\n        } catch (err) {\n            return true\n        }\n    }\n    return false\n}\nexport const getHasLiedResolution = function () {\n    return window.screen.width < window.screen.availWidth || window.screen.height < window.screen.availHeight\n}\nexport const getHasLiedOs = function () {\n    var userAgent = navigator.userAgent.toLowerCase()\n    var oscpu = navigator.oscpu\n    var platform = navigator.platform.toLowerCase()\n    var os\n    // We extract the OS from the user agent (respect the order of the if else if statement)\n    if (userAgent.indexOf('windows phone') >= 0) {\n        os = 'Windows Phone'\n    } else if (userAgent.indexOf('win') >= 0) {\n        os = 'Windows'\n    } else if (userAgent.indexOf('android') >= 0) {\n        os = 'Android'\n    } else if (userAgent.indexOf('linux') >= 0) {\n        os = 'Linux'\n    } else if (userAgent.indexOf('iphone') >= 0 || userAgent.indexOf('ipad') >= 0) {\n        os = 'iOS'\n    } else if (userAgent.indexOf('mac') >= 0) {\n        os = 'Mac'\n    } else {\n        os = 'Other'\n    }\n    // We detect if the person uses a mobile device\n    var mobileDevice = (('ontouchstart' in window) ||\n        (navigator.maxTouchPoints > 0) ||\n        (navigator.msMaxTouchPoints > 0))\n\n    if (mobileDevice && os !== 'Windows Phone' && os !== 'Android' && os !== 'iOS' && os !== 'Other') {\n        return true\n    }\n\n    // We compare oscpu with the OS extracted from the UA\n    if (typeof oscpu !== 'undefined') {\n        oscpu = oscpu.toLowerCase()\n        if (oscpu.indexOf('win') >= 0 && os !== 'Windows' && os !== 'Windows Phone') {\n            return true\n        } else if (oscpu.indexOf('linux') >= 0 && os !== 'Linux' && os !== 'Android') {\n            return true\n        } else if (oscpu.indexOf('mac') >= 0 && os !== 'Mac' && os !== 'iOS') {\n            return true\n        } else if ((oscpu.indexOf('win') === -1 && oscpu.indexOf('linux') === -1 && oscpu.indexOf('mac') === -1) !== (os === 'Other')) {\n            return true\n        }\n    }\n\n    // We compare platform with the OS extracted from the UA\n    if (platform.indexOf('win') >= 0 && os !== 'Windows' && os !== 'Windows Phone') {\n        return true\n    } else if ((platform.indexOf('linux') >= 0 || platform.indexOf('android') >= 0 || platform.indexOf('pike') >= 0) && os !== 'Linux' && os !== 'Android') {\n        return true\n    } else if ((platform.indexOf('mac') >= 0 || platform.indexOf('ipad') >= 0 || platform.indexOf('ipod') >= 0 || platform.indexOf('iphone') >= 0) && os !== 'Mac' && os !== 'iOS') {\n        return true\n    } else if ((platform.indexOf('win') === -1 && platform.indexOf('linux') === -1 && platform.indexOf('mac') === -1) !== (os === 'Other')) {\n        return true\n    }\n\n    return typeof navigator.plugins === 'undefined' && os !== 'Windows' && os !== 'Windows Phone'\n}\nexport const getHasLiedBrowser = function () {\n    var userAgent = navigator.userAgent.toLowerCase()\n    var productSub = navigator.productSub\n\n    // we extract the browser from the user agent (respect the order of the tests)\n    var browser\n    if (userAgent.indexOf('firefox') >= 0) {\n        browser = 'Firefox'\n    } else if (userAgent.indexOf('opera') >= 0 || userAgent.indexOf('opr') >= 0) {\n        browser = 'Opera'\n    } else if (userAgent.indexOf('chrome') >= 0) {\n        browser = 'Chrome'\n    } else if (userAgent.indexOf('safari') >= 0) {\n        browser = 'Safari'\n    } else if (userAgent.indexOf('trident') >= 0) {\n        browser = 'Internet Explorer'\n    } else {\n        browser = 'Other'\n    }\n\n    if ((browser === 'Chrome' || browser === 'Safari' || browser === 'Opera') && productSub !== '20030107') {\n        return true\n    }\n\n    // eslint-disable-next-line no-eval\n    var tempRes = eval.toString().length\n    if (tempRes === 37 && browser !== 'Safari' && browser !== 'Firefox' && browser !== 'Other') {\n        return true\n    } else if (tempRes === 39 && browser !== 'Internet Explorer' && browser !== 'Other') {\n        return true\n    } else if (tempRes === 33 && browser !== 'Chrome' && browser !== 'Opera' && browser !== 'Other') {\n        return true\n    }\n\n    // We create an error to see how it is handled\n    var errFirefox\n    try {\n        // eslint-disable-next-line no-throw-literal\n        throw 'a'\n    } catch (err) {\n        try {\n            err.toSource()\n            errFirefox = true\n        } catch (errOfErr) {\n            errFirefox = false\n        }\n    }\n    return errFirefox && browser !== 'Firefox' && browser !== 'Other'\n}","import {getLanguage, getTimezone, getTimezoneOffsetVsUTC} from \"./hardware\";\nimport * as finger from \"./fingerprint2\";\n\nconst options = {\n    enableHighAccuracy: true,\n    timeout: 10000,\n    maximumAge: 0\n};\n\nlet geoHandler;\nlet geoHandlerOne;\nlet data = {\n    position: \"\",\n    error: \"\"\n};\n\nexport function isGeoAvailable() {\n    return \"geolocation\" in navigator;\n}\n\nexport function geCurrentPosition(handler) {\n    if (isGeoAvailable()) {\n        geoHandlerOne = handler;\n        navigator.geolocation.getCurrentPosition(successHandler, errorHandler, options);\n    }\n}\n\nfunction successHandler(pos) {\n    console.log(\"g1\");\n    var crd = pos.coords;\n\n    data.position = pos;\n    console.log(pos);\n    geoHandlerOne && geoHandlerOne({position: pos});\n\n    console.log('Your current position is:');\n    console.log(`Latitude : ${crd.latitude}`);\n    console.log(`Longitude: ${crd.longitude}`);\n    console.log(`More or less ${crd.accuracy} meters.`);\n}\n\nfunction errorHandler(err) {\n    // error.code can be:\n    //   0: unknown error\n    //   1: permission denied\n    //   2: position unavailable (error response from location provider)\n    //   3: timed out\n    let reason = \"unknown error\";\n    if (err.code === 1) {\n        reason = \"permission denied\";\n    } else if (err.code === 2) {\n        reason = \"position unavailable (error response from location provider)\";\n    } else if (err.code === 3) {\n        reason = \"timed out\";\n    }\n    \n    data.error = `ERROR(${err.code}): reason: ${reason}, ${err.message}`;\n    \n    geoHandler && geoHandler({error: data.error});\n    geoHandlerOne && geoHandlerOne({error: data.error});\n    console.warn(data.error);\n}\n\n\nexport function watchPosition(handler) {\n    let id;\n    if (isGeoAvailable()) {\n        \n        geoHandler = handler;\n        id = navigator.geolocation.watchPosition(successWatchHandler, errorHandler, options);\n    }\n    return id;\n}\n\nfunction successWatchHandler(pos) {\n    var crd = pos.coords;\n    \n    data.position = pos;\n    console.log(pos);\n    geoHandler && geoHandler({position: pos});\n    \n    console.log('Watch: Your current position is:', new Date());\n    console.log(`Latitude : ${crd.latitude}`);\n    console.log(`Longitude: ${crd.longitude}`);\n    console.log(`More or less ${crd.accuracy} meters.`);\n}\n\n\nexport function getResultDeviceTrust() {\n    let result = 0;\n    let tests = 0;\n\n    result += finger.getHasLiedOs() ? 0 : 100;\n    tests++;\n    result += finger.getHasLiedBrowser() ? 0 : 100;\n    tests++;\n    result += finger.getHasLiedLanguages() ? 0 : 100;\n    tests++;\n    result += finger.getHasLiedResolution() ? 0 : 100;\n    tests++;\n    result += hasLiedIANATimezone(getTimezone()) ? 0 : 100;\n    tests++;\n    result += hasLiedTimeZoneOffset(getTimezoneOffsetVsUTC()) ? 0 : 100;\n    tests++;\n    \n    // result += testLanguage(getLanguage());\n    // tests++;\n   \n\n    return parseInt(result/tests, 10);\n}\n\nexport function hasLiedIANATimezone(timezone) {\n    const tz = String(timezone).toLowerCase();\n    const tzs = [\"america/toronto\", \"america/montreal\"];\n    return tzs.indexOf(tz) === -1;\n}\n\nexport function hasLiedTimeZoneOffset(offset) {\n    console.log(offset);\n    let v = parseInt(offset, 10);\n\n    return !(v <= 6 && v >= 4);\n}\n\nexport function testLanguage(language) {\n    //\n    if(language === \"en-CA\" || language === \"fr-CA\" || language === \"en\") {\n        return 100;\n    }\n\n    return 0;\n}","import React from \"react\";\n\nexport function Observation({title, value}) {\n\n    return <div className=\"observation\">{title}: <span>{value}</span></div>\n}\n\nexport function ObservationTest({title, passed}) {\n\n    return (<div className={`observation observation-test ${passed ? \"\" : \"failed\"}`}>\n        {title}: <span className={`result`}>{JSON.stringify(passed)}</span>\n    </div>)\n}","import React, {Component} from 'react';\nimport './App.css';\nimport {\n    geCurrentPosition,\n    getResultDeviceTrust,\n    isGeoAvailable,\n    hasLiedIANATimezone,\n    watchPosition,\n    hasLiedTimeZoneOffset\n} from \"./services/geo\";\nimport {\n    getLanguage, getLanguages,\n    getTimezone,\n    getTimezoneOffsetVsUTC,\n    getVideoCardInfo\n} from \"./services/hardware\";\nimport {Observation, ObservationTest} from \"./Observation\";\nimport * as finger from \"./services/fingerprint2\";\n\n\nconst exportToCSV = function (id, name, arrData) {\n    \n    if (!arrData.length) {\n        return;\n    }\n    \n    let csvContent = \"data:text/csv;charset=utf-8,\";\n    \n    let heading = \"id,latitude,longitude,accuracy,altitude,altitudeAccuracy,heading,speed\".split(\",\");\n    // headers\n    csvContent += heading.join(\",\") + ',timestamp' + '\\r\\n';\n    \n    arrData.forEach(function (item, index) {\n        csvContent += csvRow(item, heading, index + 1);\n    });\n    \n    let encodedUri = encodeURI(csvContent);\n    let link = document.createElement(\"a\");\n    link.setAttribute(\"href\", encodedUri);\n    link.setAttribute(\"download\", \"customers.csv\");\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n    link.click();\n    console.log(\"clicked\");\n};\n\nconst csvRow = function (dataObject, heading, index) {\n    let dataArray = heading.map((hr) => {\n        if (hr === \"id\") return \"\" + index;\n        return dataObject.coords[hr] === null ? '' : dataObject.coords[hr].toString();\n    });\n    dataArray.push(dataObject.timestamp);\n    return dataArray.join(',') + '\\r\\n';\n};\n\nclass TestingGround extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            position: \"\",\n            error: \"\",\n            errorOne: \"\",\n            prevWatchPositions: [],\n            prevOnePositions: []\n        };\n        \n        this.handleWatchChanges = this.handleWatchChanges.bind(this);\n        this.handleWatchClick = this.handleWatchClick.bind(this);\n        this.handleOneClick = this.handleOneClick.bind(this);\n        this.handleOneChanges = this.handleOneChanges.bind(this);\n        this.downloadWatchCSV = this.downloadWatchCSV.bind(this);\n        this.downloadOneCSV = this.downloadOneCSV.bind(this);\n    }\n    \n    handleWatchChanges({position, error}) {\n        // this.setState({position: position, error: error});\n        if (!error) {\n            let newEntry = {coords: {}, timestamp: position.timestamp};\n            for (let key in position.coords) {\n                // if (position.coords.hasOwnProperty(key)) {\n                    console.log(\"key: \", key, position.coords[key]);\n                    newEntry.coords[key] = position.coords[key];\n                // }\n            }\n            // {coords: position.coords, timestamp: position.timestamp}\n            this.setState({prevWatchPositions: [].concat([...this.state.prevWatchPositions], newEntry)});\n        } else {\n            this.setState({error: error});\n        }\n    }\n    \n    handleOneChanges({position, error}) {\n        // this.setState({position: position, error: error});\n        if (!error) {\n            let newEntry = {coords: {}, timestamp: position.timestamp};\n            for (let key in position.coords) {\n                // if (position.coords.hasOwnProperty(key)) {\n                    console.log(\"key: \", key, position.coords[key]);\n                    newEntry.coords[key] = position.coords[key];\n                // }\n            }\n            // {coords: position.coords, timestamp: position.timestamp}\n            this.setState({prevOnePositions: [].concat([...this.state.prevOnePositions], newEntry)});\n        } else {\n            this.setState({errorOne: error});\n        }\n    }\n    \n    \n    handleWatchClick(e) {\n        watchPosition(this.handleWatchChanges);\n    }\n    \n    handleOneClick() {\n        geCurrentPosition(this.handleOneChanges);\n    }\n    \n    // componentDidMount() {\n    //     // window.addEventListener('orientationchange', this.doOnOrientationChange);\n    //     // this.doOnOrientationChange();\n    // }\n    \n    // doOnOrientationChange() {\n    //     if (window.innerHeight > window.innerWidth) {\n    //         console.log(\"portrait\");\n    //     } else {\n    //         console.log(\"landscape\")\n    //     }\n    // }\n    \n    downloadOneCSV(event) {\n        event.stopPropagation();\n        exportToCSV(\"downloadoneCSV\", \"getCurrentPosition\", this.state.prevOnePositions);\n        return false;\n    }\n    \n    downloadWatchCSV(event) {\n        event.stopPropagation();\n        exportToCSV(\"downloadwatchCSV\", \"watchPosition\", this.state.prevWatchPositions);\n        return false;\n    }\n    \n    render() {\n        return (\n            <div className=\"App\">\n                <section className=\"side-container\">\n                    <header>Geolocation</header>\n                    <div className={\"details\"}>\n                        <h1> Watch Position</h1>\n                        <button onClick={this.handleWatchClick}>Start Watching Geolocation</button>\n                        <code>{this.state.error}</code>\n                        \n                        <ul className={\"entries\"}>\n                            <li key={\"w0\"}>\n                                <code className={\"index-column\"}>#</code>\n                                <code>latitude</code>\n                                <code>longitude</code>\n                                <code>accuracy</code>\n                                <code>altitude</code>\n                                <code>altitudeAccuracy</code>\n                                <code>heading</code>\n                                <code>speed</code>\n                                <code>timestamp</code>\n                                {/*<code>Date: {this.state.position && (new Date(this.state.position.timestamp).toISOString(\"DD-MM-YYYY HH:mm:ss\"))}</code>*/}\n                            </li>\n                            {this.state.prevWatchPositions.map((pos, index) => (\n                                <li key={\"w\" + index}>\n                                    <code className={\"index-column\"}>{index}.</code>\n                                    <code>{pos.coords.latitude}</code>\n                                    <code>{pos.coords.longitude}</code>\n                                    <code>{pos.coords.accuracy}m</code>\n                                    <code>{pos.coords.altitude}</code>\n                                    <code>{pos.coords.altitudeAccuracy}</code>\n                                    <code>{pos.coords.heading}</code>\n                                    <code>{pos.coords.speed}</code>\n                                    <code>+{pos.timestamp - this.state.prevWatchPositions[0].timestamp} {(pos.timestamp + \"\").length === 10 ? \"sec\" : \"ms\"}</code>\n                                    {/*<code>Date: {this.state.position && (new Date(this.state.position.timestamp).toISOString(\"DD-MM-YYYY HH:mm:ss\"))}</code>*/}\n                                </li>))\n                            }\n                        </ul>\n                        <a id=\"downloadwatchCSV\" onClick={this.downloadWatchCSV}>Download CSV</a>\n                        \n                        <br/>\n                        <br/>\n                        <br/>\n                        <br/>\n                        <br/>\n                        <br/>\n                        <br/>\n                        <br/>\n                        <br/>\n                    </div>\n                    <div className={\"details\"}>\n                        <h1> One time Position</h1>\n                        <button onClick={this.handleOneClick}>Get Quick Geolocation</button>\n                        <code>{this.state.error}</code>\n                        <ul className={\"entries\"}>\n                            <li key=\"0\">\n                                <code className={\"index-column\"}>#</code>\n                                <code>latitude</code>\n                                <code>longitude</code>\n                                <code>accuracy</code>\n                                <code>altitude</code>\n                                <code>altitudeAccuracy</code>\n                                <code>heading</code>\n                                <code>speed</code>\n                                <code>timestamp</code>\n                                {/*<code>Date: {this.state.position && (new Date(this.state.position.timestamp).toISOString(\"DD-MM-YYYY HH:mm:ss\"))}</code>*/}\n                            </li>\n                            {this.state.prevOnePositions && this.state.prevOnePositions.map((pos, index) => (\n                                <li key={index}>\n                                    <code className={\"index-column\"}>{index}.</code>\n                                    <code>{pos.coords.latitude}</code>\n                                    <code>{pos.coords.longitude}</code>\n                                    <code>{pos.coords.accuracy}m</code>\n                                    <code>{pos.coords.altitude}</code>\n                                    <code>{pos.coords.altitudeAccuracy}</code>\n                                    <code>{pos.coords.heading}</code>\n                                    <code>{pos.coords.speed}</code>\n                                    <code>+{pos.timestamp - this.state.prevOnePositions[0].timestamp} {(pos.timestamp + \"\").length === 10 ? \"sec\" : \"ms\"}</code>\n                                    {/*<code>Date: {this.state.position && (new Date(this.state.position.timestamp).toISOString(\"DD-MM-YYYY HH:mm:ss\"))}</code>*/}\n                                </li>))\n                            }\n                        </ul>\n                        <a id=\"downloadoneCSV\" onClick={this.downloadOneCSV}>Download CSV</a>\n                    </div>\n                    <br/>\n                    <br/>\n                    <br/>\n                    <br/>\n                    <br/>\n                    <br/>\n                    <br/>\n                    <br/>\n                    <br/>\n                    \n                    <div className={`head` + (getResultDeviceTrust() < 50 ? \" sad\" : \"\")}>\n                        <div className=\"face\">\n                            <div className=\"mouth\"/>\n                            <div className=\"eye-group\">\n                                <div className=\"eye eye-left\"/>\n                                <div className=\"eye eye-right\"/>\n                            </div>\n                        </div>\n                    </div>\n                    \n                    <div>Device Confidence: {getResultDeviceTrust()}</div>\n                    {/*<Observation title={\"Is Mobile\"} value={JSON.stringify(isMobile())}/>*/}\n                    \n                    {/*<Observation title={\"Dev Tools\"} value={devToolsOpen()}/>*/}\n                    {/*<Observation title={\"Browser data\"} value={getBrowserData()}/>*/}\n                    {/*<Observation title={\"GPU\"} value={JSON.stringify(getVideoCardInfo())}/>*/}\n                    \n                    <div className={\"details\"}>\n                        \n                        <ObservationTest title={\"OS ok\"} passed={!finger.getHasLiedOs()}/>\n                        <ObservationTest title={\"Browser ok\"} passed={!finger.getHasLiedBrowser()}/>\n                        \n                        <ObservationTest title={\"Languages ok\"} passed={!finger.getHasLiedLanguages()}/>\n                        <Observation title={\"Language\"} value={JSON.stringify(getLanguage())}/>\n                        <Observation title={\"Languages\"} value={JSON.stringify(getLanguages())}/>\n                        \n                        <ObservationTest title={\"Resolution ok\"} passed={!finger.getHasLiedResolution()}/>\n                        \n                        <ObservationTest\n                            title={`Timezone IANA`}\n                            passed={!hasLiedIANATimezone(getTimezone())}/>\n                        <Observation title={\"Timezone IANA\"}\n                                     value={JSON.stringify(getTimezone())}/>\n                        \n                        <ObservationTest\n                            title={`Timezone Offset`}\n                            passed={!hasLiedTimeZoneOffset(getTimezoneOffsetVsUTC())}/>\n                        <Observation title={\"Timezone Offset\"}\n                                     value={JSON.stringify(getTimezoneOffsetVsUTC()) + \"hr(s)\"}/>\n                        \n                        \n                        <br/>\n                        <br/>\n                        <br/>\n                        <br/>\n                        <br/>\n                        <br/>\n                        <br/>\n                        <br/>\n                        <br/>\n                    </div>\n                \n                </section>\n                <footer/>\n            </div>\n        );\n    }\n}\n\nexport default TestingGround;\n","const options = {\n    enableHighAccuracy: true,\n    timeout: 60000,\n    maximumAge: 0\n};\nlet geoHandler;\nlet geoHandlerOne;\nlet data = {\n    position: \"\",\n    error: \"\"\n};\n\nexport function isGeoAvailable() {\n    return \"geolocation\" in navigator;\n}\n\n\nexport function geCurrentPosition(handler) {\n    if (isGeoAvailable()) {\n        geoHandlerOne = handler;\n        navigator.geolocation.getCurrentPosition(successHandler, errorHandler, options);\n    } else {\n        throw new Error(\"geolocation not available\");\n    }\n}\nfunction successHandler(pos) {\n    const crd = pos.coords;\n    \n    data.position = pos;\n    console.log(pos);\n    geoHandlerOne && geoHandlerOne({position: pos});\n    \n    console.log('Your current position is:');\n    console.log(`Latitude : ${crd.latitude}`);\n    console.log(`Longitude: ${crd.longitude}`);\n    console.log(`More or less ${crd.accuracy} meters.`);\n}\n\nfunction errorHandler(err) {\n    // error.code can be:\n    //   0: unknown error\n    //   1: permission denied\n    //   2: position unavailable (error response from location provider)\n    //   3: timed out\n    let reason = \"unknown error\";\n    if (err.code === 1) {\n        reason = \"permission denied\";\n    } else if (err.code === 2) {\n        reason = \"position unavailable (error response from location provider)\";\n    } else if (err.code === 3) {\n        reason = \"timed out\";\n    }\n    \n    data.error = `ERROR(${err.code}): reason: ${reason}, ${err.message}`;\n    \n    geoHandler && geoHandler({error: data.error});\n    geoHandlerOne && geoHandlerOne({error: data.error});\n    console.warn(data.error);\n}\n\nexport function watchPosition(handler) {\n    let id;\n    if (isGeoAvailable()) {\n        \n        geoHandler = handler;\n        id = navigator.geolocation.watchPosition(successWatchHandler, errorHandler, options);\n    }\n    return id;\n}\n\nfunction successWatchHandler(pos) {\n    var crd = pos.coords;\n    \n    data.position = pos;\n    console.log(pos);\n    geoHandler && geoHandler({position: pos});\n    \n    console.log('Watch: Your current position is:', new Date());\n    console.log(`Latitude : ${crd.latitude}`);\n    console.log(`Longitude: ${crd.longitude}`);\n    console.log(`More or less ${crd.accuracy} meters.`);\n}","let state = {\n    currentPositionAvgAccuracy: -1,\n    lastCurrentPosition: {},\n    watchPositionAvgAccuracy: -1,\n};\n\nexport function testCurrentPositions(positions) {\n    console.log(positions.length);\n    \n    if(positions.length > 0){\n    \n        hasTimeRefDifferences(positions);\n    \n        hasBadVelocity(positions);\n    \n        console.log(\"real ref jitters\", getRealRefJitters(positions));\n        \n        if(hasBigPositionJumps(positions)) {\n            return _failMessage(`Current position - Failed (big jumps detected)`);\n        }\n        \n        const noJitterCount = getNoJittersCount(positions);\n        // const halfSamplesCount = Math.ceil(positions.length/2);\n        const allSamplesCount = positions.length;\n        \n        if(noJitterCount === allSamplesCount) {\n            return _failMessage(`Current position - Failed (no jitter in ${allSamplesCount} samples)`);\n        }\n        // else if(noJitterCount >= halfSamplesCount) {\n        //     return _failMessage(`Current position - Failed (no jitter in ${noJitterCount}/${allSamplesCount} samples)`);\n        // }\n    \n        let currentPositionAvgAccuracy = calcAverageAcc(positions);\n        state = {...state,\n            currentPositionAvgAccuracy: currentPositionAvgAccuracy,\n            lastCurrentPosition: {\n                coords: {...positions[positions.length - 1].coords},\n                timestamp: positions[positions.length - 1].timestamp\n            }\n        };\n        console.log(\"getCurrentPosition acc avg\", currentPositionAvgAccuracy);\n    \n        return _successMessage(`Current position - Passed (${allSamplesCount} samples)`);\n        \n    }\n    \n    return _failMessage(`Current position test - Failed (no geo data)`);\n}\n\nfunction _successMessage(message) {\n    return _testResultMessage({\n        message: message,\n        passed: true,\n        testFinished: true\n    });\n}\nfunction _failMessage(message) {\n    return _testResultMessage({\n        message: message,\n        passed: false,\n        testFinished: true\n    });\n}\nfunction _testResultMessage({message, passed, testFinished}) {\n    return {\n        message: message,\n        passed: passed,\n        testFinished: testFinished\n    };\n}\n\nfunction getNoJittersCount(positions) {\n    const jitters = getJitters(positions);\n    console.log(\"jitters\", jitters);\n    return jitters.filter((j) => j === 0).length;\n}\n\nfunction getJitters(positions) {\n    return positions.map((position, index) => {\n        if (index !== 0) {\n            return positions[index].timestamp - positions[index - 1].timestamp;\n        }\n        return 0;\n    });\n}\n\nfunction getRealRefJitters(positions) {\n    return positions.map((position, index) => {\n        if (index !== 0) {\n            return positions[index].timestampRef - positions[index - 1].timestampRef;\n        }\n        return 0;\n    });\n}\n\n\nexport function testWatchPositions(positions) {\n    \n    if(positions.length > 0){\n    \n        hasTimeRefDifferences(positions);\n    \n        hasBadVelocity(positions);\n    \n        console.log(\"real ref jitters\", getRealRefJitters(positions));\n        \n        if(hasBigPositionJumps(positions)) {\n            return _failMessage(`Watch position - Failed (big jumps detected)`);\n        }\n        \n        const noJitterCount = getNoJittersCount(positions);\n        if(noJitterCount === positions.length) {\n            return _failMessage(`Watch position test - Failed (no jitter in ${positions.length} samples)`);\n        }\n    \n        if(hasBadAccuracy(positions)) {\n            return _failMessage(`Watch position - Failed (accuracy)`);\n        }\n        \n        if(hasNoLatLongAccVariations(positions)) {\n            return _failMessage(`Watch position - Failed (not enough variation in lat, long, acc)`);\n        }\n    \n        let watchPositionAvgAccuracy = calcAverageAcc(positions);\n        state = {...state, watchPositionAvgAccuracy: watchPositionAvgAccuracy};\n        console.log(\"watchPosition acc avg\", watchPositionAvgAccuracy);\n    \n        if(avgAccuracyNotImproved(state)) {\n            return _failMessage(`Accuracy didn't improve - avg`);\n        }\n        \n        if(!accuracyTrendImproves(getAccuracies(positions)) && watchPositionAvgAccuracy <= 4) {\n            return _failMessage(`Accuracy didn't improve - trend`);\n        }\n        \n        return _successMessage(`Watch position test - Passed (${positions.length} samples)`);\n    }\n    \n    return _failMessage(`Watch position test - Failed (no geo data)`);\n}\n\nexport function hasBigPositionJumps(positions) {\n    try {\n        if(positions.length > 0){\n            console.log(\"big Positions start\");\n            \n            const distances = positions.map((position, index, positions) => {\n                if(index !== 0){\n                    \n                    const lat1 = positions[index - 1].coords.latitude;\n                    const lon1 = positions[index - 1].coords.longitude;\n                    const lat2 = position.coords.latitude;\n                    const lon2 = position.coords.longitude;\n    \n                    return calcCrow(lat1, lon1, lat2, lon2);\n                }\n                return 0;\n            });\n        \n            console.log(\"distances\", distances);\n            \n            const bigJumps = _getInvalidDistances(distances, 10);\n            console.log(\"bigJumps\", bigJumps);\n            \n            return bigJumps.length > 0;\n        }\n    } catch (e) {\n        return false;\n    }\n    \n    return false;\n}\n\nfunction calcCrow(lat1, lon1, lat2, lon2) {\n    if ((lat1 === lat2) && (lon1 === lon2)) {\n        return 0;\n    }\n    \n    const R = 6371; // km\n    const dLat = toRad(lat2-lat1);\n    const dLon = toRad(lon2-lon1);\n    const _lat1 = toRad(lat1);\n    const _lat2 = toRad(lat2);\n    \n    const a = Math.sin(dLat/2) * Math.sin(dLat/2) +\n        Math.sin(dLon/2) * Math.sin(dLon/2) * Math.cos(_lat1) * Math.cos(_lat2);\n    const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1-a));\n    return R * c;\n}\n\n// Converts numeric degrees to radians\nfunction toRad(value) {\n    return value * Math.PI / 180;\n}\n\nfunction calculateVelocity(lat2, lon2, lat0, lon0, t2, t0, index) {\n    const deltaX = calcCrow(lat2, lon2, lat0, lon0) * 1000; //in m\n    const deltaT = (t2 - t0) / 1000; //in sec\n    // console.table([[\"lat0\", \"lon0\"],[lat0, lon0],[\"lat2\", \"lon2\"], [lat2, lon2]] );\n    // console.info(\"deltaX\", deltaX, \" deltaT\", deltaT);\n    let velocity = calcVelocity(deltaX, deltaT);\n    console.log(\"velocity\", velocity, \"m/s\", \" #\", index);\n    return velocity;\n}\n\n\nfunction calcVelocity(deltaX, deltaT){\n    if(deltaT && deltaX){\n        return deltaX/deltaT;\n    }\n    return 0;\n}\n\n// assumes valid periods of time\nfunction _getInvalidDistances(distances, validDistance) {\n    return distances.filter((distance) => distance > validDistance);\n}\n\n\nexport function hasTimeRefDifferences(positions) {\n    if(positions.length > 0){\n        \n        const timeDiffs = positions.map((position, index, positions) => {\n            const t2Ref = position.timestampRef;\n            const t2 = position.timestamp;\n            \n            let tDiff = (t2Ref - t2)/1000;\n            console.log(t2Ref, \"vs\", t2, tDiff, \"sec diff\");\n            return tDiff;\n        });\n        \n        console.log(\"timeDiffs\", timeDiffs);\n    }\n}\n\nexport function hasBadVelocity(positions) {\n    try {\n        if(positions.length > 0){\n            \n            const lat0 = positions[0].coords.latitude;\n            const lon0 = positions[0].coords.longitude;\n            const t0 = positions[0].timestamp;\n            \n            const velocities = positions.map((position, index, positions) => {\n                if(index !== 0){\n                    \n                    const lat2 = position.coords.latitude;\n                    const lon2 = position.coords.longitude;\n                    const t2 = position.timestamp;\n\n                    return calculateVelocity(lat2, lon2, lat0, lon0, t2, t0, index);\n                }\n                return 0;\n            });\n    \n            const velocitiesCurrent = positions.map((position, index, positions) => {\n                if(index !== 0){\n                    const latprev = positions[index-1].coords.latitude;\n                    const lonprev = positions[index-1].coords.longitude;\n                    const tprev = positions[index-1].timestamp;\n                    \n                    const lat = position.coords.latitude;\n                    const lon = position.coords.longitude;\n                    const t = position.timestamp;\n            \n                    return calculateVelocity(lat, lon, latprev, lonprev, t, tprev, index);\n                }\n                return 0;\n            });\n    \n            const speeds = positions.map((position, index, positions) => {\n                return position.coords.speed;\n            });\n            \n            console.log(\"velocities\", velocities);\n            console.log(\"velocities Current\", velocitiesCurrent);\n            console.log(\"speeds\", speeds);\n            \n            return false;\n        }\n    } catch (e) {\n        return false;\n    }\n    \n    return false;\n}\n\n\nfunction hasBadAccuracy(positions) {\n    try {\n        if(positions.length >= 10){\n            const bad1mAccuracies = positions.filter((position) => {\n                return position.coords.accuracy === 1\n            });\n            \n            console.log(\"bad1mAccuracies\", bad1mAccuracies);\n            return bad1mAccuracies.length === positions.length;\n        }\n        \n    } catch (e) {\n        return false;\n    }\n    return false;\n}\n\nfunction hasNoLatLongAccVariations(positions) {\n    try {\n        if(positions.length >= 10){\n            const constLat = [...new Set(positions.map((position) => position.coords.latitude))];\n            const constLong = [...new Set(positions.map((position) => position.coords.longitude))];\n            const constAcc = [...new Set(positions.map((position) => position.coords.accuracy))];\n\n            console.log(\"constLat\", constLat);\n            console.log(\"constLong\", constLong);\n            console.log(\"constAcc\", constAcc);\n\n            return constLat.length === 1 && constAcc.length === 1 && constLong.length === 1;\n        }\n    } catch (e) {\n        return false;\n    }\n    \n    return false;\n}\n\nexport function calcAverageAcc(positions) {\n    try {\n        if(positions.length > 0){\n            \n            // const lat0 = positions[0].coords.latitude;\n            // const lon0 = positions[0].coords.longitude;\n            // const t0 = positions[0].timestamp;\n            \n            const accuracies = positions.map((position, index) => {\n                return position.coords.accuracy;\n            });\n            \n            console.log(\"accuracies\", accuracies);\n            \n            const sum = accuracies.reduce((acc, a) => acc + a, 0);\n            return sum/accuracies.length;\n        }\n    } catch (e) {\n        return -1;\n    }\n    \n    return -1;\n}\n\nexport function getAccuracies(positions) {\n    try {\n        if(positions.length > 0){\n            \n            // const lat0 = positions[0].coords.latitude;\n            // const lon0 = positions[0].coords.longitude;\n            // const t0 = positions[0].timestamp;\n\n            return positions.map((position, index) => {\n                return position.coords.accuracy;\n            });\n        }\n    } catch (e) {\n        return [];\n    }\n    \n    return [];\n}\n\nfunction avgAccuracyNotImproved({currentPositionAvgAccuracy, watchPositionAvgAccuracy}) {\n    console.log(\"Avg Acc current\", currentPositionAvgAccuracy, \"vs watch\", watchPositionAvgAccuracy);\n    return currentPositionAvgAccuracy < watchPositionAvgAccuracy;\n}\n\nfunction accuracyTrendImproves(accuracies) {\n    if(accuracies && accuracies.length > 0) {\n        const improved = accuracies.filter((acc, i) => {\n            if(i > 0) {\n                return acc <= accuracies[i-1];\n            }\n            return false;\n        });\n        console.log(\"accuracy trend\", improved);\n        console.log(\"accuracy trend count\", improved.length, \"vs\", accuracies.length - 1);\n        const trend = ((improved.length * 100) / (accuracies.length - 1));\n        console.log(\"accuracy trend \", trend);\n        return trend >= 60;\n    }\n    \n    return true;\n}\n\n// function calculateDistances(coordinates) {\n//     let i;\n//     let distances = [];\n//     for (i=1; i < coordinates.length-1; i++) {\n//         distances.push(_calcDistance(coordinates[i-1], coordinates[i], 'K'));\n//     }\n//     return distances;\n// }\n//\n// function _calcDistance(n, m, unit) {\n//     const lat1 = m.coords.latitude;\n//     const lat2 = n.coords.latitude;\n//     const lon1 = m.coords.longitude;\n//     const lon2 = n.coords.longitude;\n//\n//     if ((lat1 === lat2) && (lon1 === lon2)) {\n//         return 0;\n//     }\n//\n//     const radlat1 = Math.PI * lat1/180;\n//     const radlat2 = Math.PI * lat2/180;\n//     const theta = lon1-lon2;\n//     const radtheta = Math.PI * theta/180;\n//     let dist = Math.sin(radlat1) * Math.sin(radlat2) + Math.cos(radlat1) * Math.cos(radlat2) * Math.cos(radtheta);\n//     if (dist > 1) {\n//         dist = 1;\n//     }\n//     dist = Math.acos(dist);\n//     dist = dist * 180/Math.PI;\n//     dist = dist * 60 * 1.1515;\n//     if (unit===\"K\") { dist = dist * 1.609344 }\n//     if (unit===\"N\") { dist = dist * 0.8684 }\n//     return dist;\n//\n// }\n\n\n\n","export function isTrustworthyDevice() {\n    return isTrustworthyMobile() || isTrustworthyDesktop();\n}\n\nfunction isTrustworthyMobile() {\n    return isTrustworthyAndroid() || isTrustworthyIphoneOrIpad();\n}\n\nfunction isTrustworthyAndroid() {\n    return navigator.userAgent.indexOf('Android') !== -1 && (navigator.platform.indexOf('Linux') !== -1 || navigator.platform.indexOf('Android') !== -1);\n}\n\nfunction isTrustworthyIphoneOrIpad() {\n    return (isTrustworthyIphone() || isTrustworthyIpad()) && isNotXcodeSimulator();\n}\n\nfunction isTrustworthyIphone() {\n    return navigator.userAgent.indexOf('iPhone') !== -1 && navigator.platform.indexOf('iPhone') !== -1;\n}\n\nfunction isTrustworthyIpad() {\n    return navigator.userAgent.indexOf('iPad') !== -1 && navigator.platform.indexOf('iPad') !== -1;\n}\n\nfunction isNotXcodeSimulator() {\n    var webGlContext = document.createElement('canvas').getContext('webgl');\n    var rendererExtension = webGlContext.getExtension('WEBGL_debug_renderer_info');\n    var webGlRenderer = webGlContext.getParameter(rendererExtension.UNMASKED_RENDERER_WEBGL);\n    return webGlRenderer.indexOf('Apple GPU') === -1 && webGlRenderer.indexOf('Apple Software Renderer') === -1;\n}\n\nfunction isTrustworthyDesktop() {\n    return isTrustworthyWindows() || isTrustworthyMacos();\n}\n\nfunction isTrustworthyWindows() {\n    return navigator.userAgent.indexOf('Windows') !== -1 && navigator.platform.indexOf('Win32') !== -1;\n}\n\nfunction isTrustworthyMacos() {\n    return navigator.userAgent.indexOf('Macintosh') !== -1 && navigator.platform.indexOf('MacIntel') !== -1;\n}","import React from 'react';\nimport {isGeoAvailable, geCurrentPosition, watchPosition} from \"./services/geolocation_v2\";\nimport {testCurrentPositions, testWatchPositions} from \"./services/calculations\";\n\nimport {\n    getLanguage, getLanguages,\n    getTimezone,\n    getTimezoneOffsetVsUTC,\n    getVideoCardInfo\n} from \"./services/hardware\";\nimport {isTrustworthyDevice} from \"./trustworthy\";\n\nconst FINAL_FAIL_MESSAGE = \"Hmm... not enough to continue\";\n\nclass Home extends React.Component {\n    constructor(props) {\n        super(props);\n        this.isTrustworthy = false;\n        this.state = {\n            currentPositions: [],\n            watchPositions: [],\n            position: {\n                coords: {},\n                timestamp: 0\n            },\n            error: \"\",\n            info: {\n                message:\"\",\n                testFinished: false,\n                passed: false\n            },\n            infoWatch: {\n                message:\"\",\n                testFinished: false,\n                passed: false\n            },\n            infoFinal: {\n                message:\"\",\n                testFinished: false,\n                passed: false\n            }\n        };\n        \n        this.handleCurrentPosition = this.handleCurrentPosition.bind(this);\n        this.handleWatchPosition = this.handleWatchPosition.bind(this);\n\n        this.currentTimerId = 0;\n        this.watchTimerId = 0;\n    }\n\n    componentDidMount() {\n        const self = this;\n        this.setState({\n            info: {\n                message:\"Running current position test....please wait\"\n            }\n        });\n        \n        this.isTrustworthy = isTrustworthyDevice();\n\n        this.currentTimerId = setInterval(() => {\n            geCurrentPosition(this.handleCurrentPosition);\n        }, 1000);\n\n        setTimeout(() => {\n            clearInterval(self.currentTimerId);\n            self.runCurrentPositionTest();\n        }, 1100 * 11);\n    }\n    \n    handleCurrentPosition({position, error}) {\n        const self = this;\n        if (position) {\n            const positionData = {\n                    coords: {\n                        latitude: position.coords.latitude,\n                        longitude: position.coords.longitude,\n                        accuracy: position.coords.accuracy,\n                        altitude: position.coords.altitude,\n                        altitudeAccuracy: position.coords.altitudeAccuracy,\n                        heading: position.coords.heading,\n                        speed: position.coords.speed,\n                    },\n                    timestamp: position.timestamp,\n                    timestampRef: (new Date().getTime())\n                };\n            self.setState({position: positionData});\n            self.setState({currentPositions: [...self.state.currentPositions, positionData]});\n        }\n        \n        if (error) {\n            self.setState({error: error});\n        }\n    }\n    \n    runCurrentPositionTest() {\n        const info = testCurrentPositions(this.state.currentPositions);\n        this.setState({info: {...info}});\n        if(info.passed){\n            this.startWatchTest();\n        } else {\n            this.setState({infoFinal: {message:FINAL_FAIL_MESSAGE, passed: false, testFinished: true}});\n        }\n    }\n    \n    startWatchTest() {\n        if(isGeoAvailable()){\n            const self = this;\n            this.setState({\n                infoWatch: {\n                    message: \"Running watch position test....please wait\"\n                }\n            });\n\n            self.watchTimerId = watchPosition(this.handleWatchPosition);\n    \n            setTimeout(() => {\n                window.navigator.geolocation.clearWatch(self.watchTimerId);\n                self.runWatchPositionTest();\n            }, 1000 * 25);\n        }\n    }\n\n    handleWatchPosition({position, error}) {\n        const self = this;\n        if (position) {\n            const positionData = {\n                coords: {\n                    latitude: position.coords.latitude,\n                    longitude: position.coords.longitude,\n                    accuracy: position.coords.accuracy,\n                    altitude: position.coords.altitude,\n                    altitudeAccuracy: position.coords.altitudeAccuracy,\n                    heading: position.coords.heading,\n                    speed: position.coords.speed,\n                },\n                timestamp: position.timestamp,\n                timestampRef: (new Date().getTime())\n            };\n            self.setState({position: positionData});\n            self.setState({watchPositions: [...self.state.watchPositions, positionData]});\n        }\n\n        if (error) {\n            self.setState({error: error});\n        }\n    }\n    \n    runWatchPositionTest() {\n        const infoWatch = testWatchPositions(this.state.watchPositions);\n        this.setState({infoWatch: {...infoWatch}});\n        if(infoWatch.passed){\n            this.setState({infoFinal: {message:\"All good ... you may pass\", passed: true, testFinished: true}});\n        } else {\n            this.setState({infoFinal: {message: FINAL_FAIL_MESSAGE, passed: false, testFinished: true}});\n        }\n    }\n    \n    render() {\n        const isTrusworthy = this.isTrustworthy;\n        const position = this.state.position;\n        const error = this.state.error;\n        const {vendor: videoCardVendor, renderer: videoCardRender} = getVideoCardInfo();\n        return (\n            <div className=\"container\">\n                <div className=\"wrapper\">\n                <div className=\"sections\">\n                    <section className={\"section tests\"}>\n                        <p className={`test ${this.state.info.testFinished ? this.state.info.passed ? \"ok\": \"not-ok\" : \"not-finished\"}`}>{this.state.info.message}</p>\n                        <p className={`test ${this.state.infoWatch.testFinished ? this.state.infoWatch.passed ? \"ok\": \"not-ok\" : \"not-finished\"}`}>{this.state.infoWatch.message}</p>\n                        <p className={`test final ${this.state.infoFinal.testFinished ? this.state.infoFinal.passed ? \"ok\": \"not-ok\" : \"not-finished\"}`}>{this.state.infoFinal.message}</p>\n                    </section>\n                    <section className={\"section\"}>\n                        <div className=\"position-details\">\n                            <h2>Position</h2>\n                            <ul>\n                                <li>\n                                    <div>Latitude</div>\n                                    <div>{position.coords.latitude}</div>\n                                </li>\n                                <li>\n                                    <div>Longitude</div>\n                                    <div>{position.coords.longitude}</div>\n                                </li>\n                                <li>\n                                    <div>Accuracy</div>\n                                    <div>{position.coords.accuracy} m</div>\n                                </li>\n                                <li>\n                                    <div>Altitude</div>\n                                    <div>{position.coords.altitude}</div>\n                                </li>\n                                <li>\n                                    <div>Altitude Accuracy</div>\n                                    <div>{position.coords.altitudeAccuracy}</div>\n                                </li>\n                                <li>\n                                    <div>Heading</div>\n                                    <div>{position.coords.heading}</div>\n                                </li>\n                                <li>\n                                    <div>Speed</div>\n                                    <div>{position.coords.speed}</div>\n                                </li>\n                            </ul>\n    \n                            <h2>Other</h2>\n                            <ul>\n                                <li>Trustworthy Device <i className=\"vals\">{`${isTrusworthy ? \"yes\" : \"no\"}`}</i></li>\n                                <li>Screen <i className=\"vals\">{`${window.screen.width} x ${window.screen.height}`}</i></li>\n                                <li>Available Resolution <i className=\"vals\">{`${window.screen.availWidth} x ${window.screen.availHeight}`}</i></li>\n                                {/*<li>{`Screen Width ${window.screen.width} vs Screen Avail Width ${window.screen.availWidth}`}</li>*/}\n                                {/*<li>{`Screen Height ${window.screen.height} vs Screen Avail Height ${window.screen.availHeight}`}</li>*/}\n                                <li>Device Pixel Ration <i className=\"vals\">{`${window.devicePixelRatio}`}</i></li>\n                                <li>Language <i className=\"vals\">{`${getLanguage()}`}</i></li>\n                                <li>Languages <i className=\"vals\">{`${JSON.stringify(getLanguages())}`}</i></li>\n                                <li>Timezone <i className=\"vals\">{`${getTimezone()}`}</i></li>\n                                <li>TimezoneOffsetVsUTC  <i className=\"vals\">{`${JSON.stringify(getTimezoneOffsetVsUTC())}`}</i></li>\n                                <li>VideoCard Vendor <i className=\"vals\">{`${videoCardVendor}`}</i></li>\n                                <li>VideoCard Render <i className=\"vals\">{`${videoCardRender}`}</i></li>\n                                <li>Platform <i className=\"vals\">{`${navigator.platform}`}</i></li>\n                                <li>Hardware Concurrency <i className=\"vals\">{`${navigator.hardwareConcurrency}`}</i></li>\n                                <li>User Agent <i className=\"vals\">{`${navigator.userAgent}`}</i></li>\n                            </ul>\n                            <br />\n                            <div className={error ? \"text-error\" : \"\"}>{error ? \"Error: \" + error : \"\"}</div>\n                        </div>\n                    </section>\n                \n                \n                </div>\n                </div>\n            </div>\n        )\n    }\n\n    componentWillUnmount() {\n        if(isGeoAvailable() && this.watchTimerId){\n            navigator.geolocation.clearWatch(this.watchTimerId);\n        }\n        if(this.currentTimerId){\n            clearInterval(this.currentTimerId);\n        }\n    }\n\n}\n\nexport default Home;","import React from \"react\";\nimport TestingGround from \"./TestingGround\";\nimport { HashRouter as Router, Route,Switch } from \"react-router-dom\";\nimport Home from \"./Home\";\n\n\nconst vNo = process.env.REACT_APP_VERSION;\n\n\nexport default function App() {\n    return (\n        <Router >\n            <header><h2>Geo Testing {`v` + vNo}</h2></header>\n            <Switch>\n                <Route exact path=\"/\" component={Home} />\n                <Route path=\"/test\" component={TestingGround} />\n            </Switch>\n        </Router>\n    );\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}