{"version":3,"sources":["services/hardware.js","services/fingerprint2.js","services/geo.js","Observation.js","services/calculations.js","TestingGround.js","services/geolocation_v2.js","trustworthy.js","components/LeafletMap.js","Home.js","GeoCollection.js","App.js","serviceWorker.js","index.js"],"names":["getVideoCardInfo","gl","document","createElement","getContext","error","debugInfo","getExtension","vendor","getParameter","UNMASKED_VENDOR_WEBGL","renderer","UNMASKED_RENDERER_WEBGL","getTimezoneOffsetVsUTC","Date","getTimezoneOffset","getTimezone","Intl","DateTimeFormat","resolvedOptions","timeZone","err","getHasLiedLanguages","navigator","languages","substr","language","getHasLiedResolution","window","screen","width","availWidth","height","availHeight","getHasLiedOs","os","userAgent","toLowerCase","oscpu","platform","indexOf","maxTouchPoints","msMaxTouchPoints","plugins","getHasLiedBrowser","browser","productSub","errFirefox","tempRes","eval","toString","length","toSource","errOfErr","options","enableHighAccuracy","timeout","maximumAge","geoHandler","geoHandlerOne","data","position","isGeoAvailable","geCurrentPosition","handler","geolocation","getCurrentPosition","successHandler","errorHandler","pos","console","log","crd","coords","latitude","longitude","accuracy","reason","code","message","warn","watchPosition","id","successWatchHandler","getResultDeviceTrust","result","finger","hasLiedIANATimezone","hasLiedTimeZoneOffset","parseInt","tests","timezone","tz","String","offset","v","Observation","title","value","className","ObservationTest","passed","JSON","stringify","state","currentPositionAvgAccuracy","lastCurrentPosition","watchPositionAvgAccuracy","_successMessage","_testResultMessage","testFinished","_failMessage","getNoJittersCount","positions","jitters","map","index","timestamp","getJitters","filter","j","getRealRefJitters","timestampRef","testWatchPositions","hasTimeRefDifferences","hasBadVelocity","hasBigPositionJumps","bad1mAccuracies","e","hasBadAccuracy","constLat","Set","constLong","constAcc","hasNoLatLongAccVariations","calcAverageAcc","avgAccuracyNotImproved","accuracies","improved","acc","i","trend","accuracyTrendImproves","getAccuracies","distances","calcCrow","bigJumps","validDistance","distance","_getInvalidDistances","lat1","lon1","lat2","lon2","dLat","toRad","dLon","_lat1","_lat2","a","Math","sin","cos","atan2","sqrt","PI","calculateVelocity","lat0","lon0","t2","t0","velocity","deltaX","deltaT","calcVelocity","timeDiffs","t2Ref","tDiff","velocities","velocitiesCurrent","latprev","lonprev","tprev","speeds","speed","reduce","exportToCSV","name","arrData","csvContent","heading","split","join","forEach","item","prevItem","csvRow","item0","encodedUri","encodeURI","link","setAttribute","body","appendChild","click","removeChild","dataArray","key","push","timestampDiffToOriginal","jitter","timestampDiff","createNewPositionEntry","newEntry","now","TestingGround","Component","constructor","props","super","this","errorOne","prevWatchPositions","prevOnePositions","handleWatchChanges","bind","handleWatchClick","handleOneClick","handleOneChanges","downloadWatchCSV","downloadOneCSV","setState","concat","event","stopPropagation","render","onClick","altitude","altitudeAccuracy","userLanguage","browserLanguage","isTrustworthyMobile","test","isTrustworthyDesktop","LeafletMap","zoom","lat","lng","radius","floor","Map","center","TileLayer","attribution","url","Circle","Marker","Popup","Home","React","isTrustworthy","videoCardRender","currentPositions","watchPositions","info","infoWatch","infoFinal","payload","toFixed","handleCurrentPosition","handleWatchPosition","currentTimerId","watchTimerId","componentDidMount","self","setInterval","Error","setTimeout","clearInterval","runCurrentPositionTest","positionData","getTime","noJitterCount","allSamplesCount","testCurrentPositions","startWatchTest","clearWatch","runWatchPositionTest","generatePayload","googleMapsLink","deviceType","colourbits","colorDepth","pow","undefined","href","target","rel","componentWillUnmount","watchHandlerId","stopWatchPosition","App","exact","path","component","GeoCollection","Boolean","location","hostname","match","ReactDOM","getElementById","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.043732c0.chunk.js","sourcesContent":["export function getBrowserData() {\n    navigator.sayswho= (function(){\n        var ua= navigator.userAgent, tem,\n            M= ua.match(/(opera|chrome|safari|firefox|msie|trident(?=\\/))\\/?\\s*(\\d+)/i) || [];\n        if(/trident/i.test(M[1])){\n            tem=  /\\brv[ :]+(\\d+)/g.exec(ua) || [];\n            return 'IE '+(tem[1] || '');\n        }\n        if(M[1]=== 'Chrome'){\n            tem= ua.match(/\\b(OPR|Edge)\\/(\\d+)/);\n            if(tem!= null) return tem.slice(1).join(' ').replace('OPR', 'Opera');\n        }\n        M= M[2]? [M[1], M[2]]: [navigator.appName, navigator.appVersion, '-?'];\n        if((tem= ua.match(/version\\/(\\d+)/i))!= null) M.splice(1, 1, tem[1]);\n        return M.join(' ');\n    })();\n    \n    return navigator.sayswho;\n}\n\nexport function getVideoCardInfo() {\n    const gl = document.createElement('canvas').getContext('webgl');\n    if (!gl) {\n        return {\n            error: \"no webgl\",\n        };\n    }\n    const debugInfo = gl.getExtension('WEBGL_debug_renderer_info');\n    return debugInfo ? {\n        vendor: gl.getParameter(debugInfo.UNMASKED_VENDOR_WEBGL),\n        renderer:  gl.getParameter(debugInfo.UNMASKED_RENDERER_WEBGL),\n    } : {\n        error: \"no WEBGL_debug_renderer_info\",\n    };\n}\n\nexport function getLanguage() {\n    return (navigator.languages && navigator.languages.length) ? navigator.languages[0] : navigator.userLanguage || navigator.language || navigator.browserLanguage || 'en';\n}\nexport function getLanguages() {\n    return navigator.languages;\n}\n\nexport function getTimezoneOffsetVsUTC() {\n    return (new Date().getTimezoneOffset());\n}\nexport function getTimezone() {\n    try{\n        return Intl.DateTimeFormat().resolvedOptions().timeZone;\n    } catch(err){\n        return \"\";\n    }\n\n}","export const getAdBlock = function () {\n    var ads = document.createElement('div')\n    ads.innerHTML = '&nbsp;'\n    ads.className = 'adsbox'\n    var result = false\n    try {\n        // body may not exist, that's why we need try/catch\n        document.body.appendChild(ads)\n        result = document.getElementsByClassName('adsbox')[0].offsetHeight === 0\n        document.body.removeChild(ads)\n    } catch (e) {\n        result = false\n    }\n    return result\n};\nexport const getHasLiedLanguages = function () {\n    // We check if navigator.language is equal to the first language of navigator.languages\n    if (typeof navigator.languages !== 'undefined') {\n        try {\n            var firstLanguages = navigator.languages[0].substr(0, 2)\n            if (firstLanguages !== navigator.language.substr(0, 2)) {\n                return true\n            }\n        } catch (err) {\n            return true\n        }\n    }\n    return false\n}\nexport const getHasLiedResolution = function () {\n    return window.screen.width < window.screen.availWidth || window.screen.height < window.screen.availHeight\n}\nexport const getHasLiedOs = function () {\n    var userAgent = navigator.userAgent.toLowerCase()\n    var oscpu = navigator.oscpu\n    var platform = navigator.platform.toLowerCase()\n    var os\n    // We extract the OS from the user agent (respect the order of the if else if statement)\n    if (userAgent.indexOf('windows phone') >= 0) {\n        os = 'Windows Phone'\n    } else if (userAgent.indexOf('win') >= 0) {\n        os = 'Windows'\n    } else if (userAgent.indexOf('android') >= 0) {\n        os = 'Android'\n    } else if (userAgent.indexOf('linux') >= 0) {\n        os = 'Linux'\n    } else if (userAgent.indexOf('iphone') >= 0 || userAgent.indexOf('ipad') >= 0) {\n        os = 'iOS'\n    } else if (userAgent.indexOf('mac') >= 0) {\n        os = 'Mac'\n    } else {\n        os = 'Other'\n    }\n    // We detect if the person uses a mobile device\n    var mobileDevice = (('ontouchstart' in window) ||\n        (navigator.maxTouchPoints > 0) ||\n        (navigator.msMaxTouchPoints > 0))\n\n    if (mobileDevice && os !== 'Windows Phone' && os !== 'Android' && os !== 'iOS' && os !== 'Other') {\n        return true\n    }\n\n    // We compare oscpu with the OS extracted from the UA\n    if (typeof oscpu !== 'undefined') {\n        oscpu = oscpu.toLowerCase()\n        if (oscpu.indexOf('win') >= 0 && os !== 'Windows' && os !== 'Windows Phone') {\n            return true\n        } else if (oscpu.indexOf('linux') >= 0 && os !== 'Linux' && os !== 'Android') {\n            return true\n        } else if (oscpu.indexOf('mac') >= 0 && os !== 'Mac' && os !== 'iOS') {\n            return true\n        } else if ((oscpu.indexOf('win') === -1 && oscpu.indexOf('linux') === -1 && oscpu.indexOf('mac') === -1) !== (os === 'Other')) {\n            return true\n        }\n    }\n\n    // We compare platform with the OS extracted from the UA\n    if (platform.indexOf('win') >= 0 && os !== 'Windows' && os !== 'Windows Phone') {\n        return true\n    } else if ((platform.indexOf('linux') >= 0 || platform.indexOf('android') >= 0 || platform.indexOf('pike') >= 0) && os !== 'Linux' && os !== 'Android') {\n        return true\n    } else if ((platform.indexOf('mac') >= 0 || platform.indexOf('ipad') >= 0 || platform.indexOf('ipod') >= 0 || platform.indexOf('iphone') >= 0) && os !== 'Mac' && os !== 'iOS') {\n        return true\n    } else if ((platform.indexOf('win') === -1 && platform.indexOf('linux') === -1 && platform.indexOf('mac') === -1) !== (os === 'Other')) {\n        return true\n    }\n\n    return typeof navigator.plugins === 'undefined' && os !== 'Windows' && os !== 'Windows Phone'\n}\nexport const getHasLiedBrowser = function () {\n    var userAgent = navigator.userAgent.toLowerCase()\n    var productSub = navigator.productSub\n\n    // we extract the browser from the user agent (respect the order of the tests)\n    var browser\n    if (userAgent.indexOf('firefox') >= 0) {\n        browser = 'Firefox'\n    } else if (userAgent.indexOf('opera') >= 0 || userAgent.indexOf('opr') >= 0) {\n        browser = 'Opera'\n    } else if (userAgent.indexOf('chrome') >= 0) {\n        browser = 'Chrome'\n    } else if (userAgent.indexOf('safari') >= 0) {\n        browser = 'Safari'\n    } else if (userAgent.indexOf('trident') >= 0) {\n        browser = 'Internet Explorer'\n    } else {\n        browser = 'Other'\n    }\n\n    if ((browser === 'Chrome' || browser === 'Safari' || browser === 'Opera') && productSub !== '20030107') {\n        return true\n    }\n\n    // eslint-disable-next-line no-eval\n    var tempRes = eval.toString().length\n    if (tempRes === 37 && browser !== 'Safari' && browser !== 'Firefox' && browser !== 'Other') {\n        return true\n    } else if (tempRes === 39 && browser !== 'Internet Explorer' && browser !== 'Other') {\n        return true\n    } else if (tempRes === 33 && browser !== 'Chrome' && browser !== 'Opera' && browser !== 'Other') {\n        return true\n    }\n\n    // We create an error to see how it is handled\n    var errFirefox\n    try {\n        // eslint-disable-next-line no-throw-literal\n        throw 'a'\n    } catch (err) {\n        try {\n            err.toSource()\n            errFirefox = true\n        } catch (errOfErr) {\n            errFirefox = false\n        }\n    }\n    return errFirefox && browser !== 'Firefox' && browser !== 'Other'\n}","import { getTimezone, getTimezoneOffsetVsUTC} from \"./hardware\";\nimport * as finger from \"./fingerprint2\";\n\nconst options = {\n    enableHighAccuracy: true,\n    timeout: 10000,\n    maximumAge: 0\n};\n\nlet geoHandler;\nlet geoHandlerOne;\nlet data = {\n    position: \"\",\n    error: \"\"\n};\n\nexport function isGeoAvailable() {\n    return \"geolocation\" in navigator;\n}\n\nexport function geCurrentPosition(handler) {\n    if (isGeoAvailable()) {\n        geoHandlerOne = handler;\n        navigator.geolocation.getCurrentPosition(successHandler, errorHandler, options);\n    }\n}\n\nfunction successHandler(pos) {\n    console.log(\"g1\");\n    var crd = pos.coords;\n\n    data.position = pos;\n    console.log(pos);\n    geoHandlerOne && geoHandlerOne({position: pos});\n\n    console.log('Your current position is:');\n    console.log(`Latitude : ${crd.latitude}`);\n    console.log(`Longitude: ${crd.longitude}`);\n    console.log(`More or less ${crd.accuracy} meters.`);\n}\n\nfunction errorHandler(err) {\n    // error.code can be:\n    //   0: unknown error\n    //   1: permission denied\n    //   2: position unavailable (error response from location provider)\n    //   3: timed out\n    let reason = \"unknown error\";\n    if (err.code === 1) {\n        reason = \"permission denied\";\n    } else if (err.code === 2) {\n        reason = \"position unavailable (error response from location provider)\";\n    } else if (err.code === 3) {\n        reason = \"timed out\";\n    }\n    \n    data.error = `ERROR(${err.code}): reason: ${reason}, ${err.message}`;\n    \n    geoHandler && geoHandler({error: data.error});\n    geoHandlerOne && geoHandlerOne({error: data.error});\n    console.warn(data.error);\n}\n\n\nexport function watchPosition(handler) {\n    let id;\n    if (isGeoAvailable()) {\n        \n        geoHandler = handler;\n        id = navigator.geolocation.watchPosition(successWatchHandler, errorHandler, options);\n    }\n    return id;\n}\n\nexport function stopWatchPosition(id) {\n    if (isGeoAvailable()) {\n        navigator.geolocation.clearWatch(id);\n    }\n}\n\nfunction successWatchHandler(pos) {\n    var crd = pos.coords;\n    \n    data.position = pos;\n    console.log(pos);\n    geoHandler && geoHandler({position: pos});\n    \n    console.log('Watch: Your current position is:', new Date());\n    console.log(`Latitude : ${crd.latitude}`);\n    console.log(`Longitude: ${crd.longitude}`);\n    console.log(`More or less ${crd.accuracy} meters.`);\n}\n\n\nexport function getResultDeviceTrust() {\n    let result = 0;\n    let tests = 0;\n\n    result += finger.getHasLiedOs() ? 0 : 100;\n    tests++;\n    result += finger.getHasLiedBrowser() ? 0 : 100;\n    tests++;\n    result += finger.getHasLiedLanguages() ? 0 : 100;\n    tests++;\n    result += finger.getHasLiedResolution() ? 0 : 100;\n    tests++;\n    result += hasLiedIANATimezone(getTimezone()) ? 0 : 100;\n    tests++;\n    result += hasLiedTimeZoneOffset(getTimezoneOffsetVsUTC()) ? 0 : 100;\n    tests++;\n    \n    // result += testLanguage(getLanguage());\n    // tests++;\n   \n\n    return parseInt(result/tests, 10);\n}\n\nexport function hasLiedIANATimezone(timezone) {\n    const tz = String(timezone).toLowerCase();\n    const tzs = [\"america/toronto\", \"america/montreal\"];\n    return tzs.indexOf(tz) === -1;\n}\n\nexport function hasLiedTimeZoneOffset(offset) {\n    let v = parseInt(offset, 10);\n\n    return !(v <= 6 && v >= 4);\n}\n\nexport function testLanguage(language) {\n    //\n    if(language === \"en-CA\" || language === \"fr-CA\" || language === \"en\") {\n        return 100;\n    }\n\n    return 0;\n}","import React from \"react\";\n\nexport function Observation({title, value}) {\n\n    return <div className=\"observation\">{title}: <span>{value}</span></div>\n}\n\nexport function ObservationTest({title, passed}) {\n\n    return (<div className={`observation observation-test ${passed ? \"\" : \"failed\"}`}>\n        {title}: <span className={`result`}>{JSON.stringify(passed)}</span>\n    </div>)\n}","let state = {\n    currentPositionAvgAccuracy: -1,\n    lastCurrentPosition: {},\n    watchPositionAvgAccuracy: -1,\n};\n\nexport function testCurrentPositions(positions) {\n    console.log(positions.length);\n    \n    if(positions.length > 0){\n    \n        hasTimeRefDifferences(positions);\n    \n        hasBadVelocity(positions);\n    \n        console.log(\"real ref jitters\", getRealRefJitters(positions));\n        \n        if(hasBigPositionJumps(positions)) {\n            return _failMessage(`Current position - Failed (big jumps detected)`);\n        }\n        \n        const noJitterCount = getNoJittersCount(positions);\n        // const halfSamplesCount = Math.ceil(positions.length/2);\n        const allSamplesCount = positions.length;\n        \n        if(noJitterCount === allSamplesCount) {\n            return _failMessage(`Current position - Failed (no jitter in ${allSamplesCount} samples)`);\n        }\n        // else if(noJitterCount >= halfSamplesCount) {\n        //     return _failMessage(`Current position - Failed (no jitter in ${noJitterCount}/${allSamplesCount} samples)`);\n        // }\n    \n        let currentPositionAvgAccuracy = calcAverageAcc(positions);\n        state = {...state,\n            currentPositionAvgAccuracy: currentPositionAvgAccuracy,\n            lastCurrentPosition: {\n                coords: {...positions[positions.length - 1].coords},\n                timestamp: positions[positions.length - 1].timestamp\n            }\n        };\n        console.log(\"getCurrentPosition acc avg\", currentPositionAvgAccuracy);\n    \n        return _successMessage(`Current position - Passed (${allSamplesCount} samples)`);\n        \n    }\n    \n    return _failMessage(`Current position test - Failed (no geo data)`);\n}\n\nfunction _successMessage(message) {\n    return _testResultMessage({\n        message: message,\n        passed: true,\n        testFinished: true\n    });\n}\nfunction _failMessage(message) {\n    return _testResultMessage({\n        message: message,\n        passed: false,\n        testFinished: true\n    });\n}\nfunction _testResultMessage({message, passed, testFinished}) {\n    return {\n        message: message,\n        passed: passed,\n        testFinished: testFinished\n    };\n}\n\nfunction getNoJittersCount(positions) {\n    const jitters = getJitters(positions);\n    console.log(\"jitters\", jitters);\n    return jitters.filter((j) => j === 0).length;\n}\n\nfunction getJitters(positions) {\n    return positions.map((position, index) => {\n        if (index !== 0) {\n            return positions[index].timestamp - positions[index - 1].timestamp;\n        }\n        return 0;\n    });\n}\n\nfunction getRealRefJitters(positions) {\n    return positions.map((position, index) => {\n        if (index !== 0) {\n            return positions[index].timestampRef - positions[index - 1].timestampRef;\n        }\n        return 0;\n    });\n}\n\n\nexport function testWatchPositions(positions) {\n    \n    if(positions.length > 0){\n    \n        hasTimeRefDifferences(positions);\n    \n        hasBadVelocity(positions);\n    \n        console.log(\"real ref jitters\", getRealRefJitters(positions));\n        \n        if(hasBigPositionJumps(positions)) {\n            return _failMessage(`Watch position - Failed (big jumps detected)`);\n        }\n        \n        const noJitterCount = getNoJittersCount(positions);\n        if(noJitterCount === positions.length) {\n            return _failMessage(`Watch position test - Failed (no jitter in ${positions.length} samples)`);\n        }\n    \n        if(hasBadAccuracy(positions)) {\n            return _failMessage(`Watch position - Failed (accuracy)`);\n        }\n        \n        if(hasNoLatLongAccVariations(positions)) {\n            return _failMessage(`Watch position - Failed (not enough variation in lat, long, acc)`);\n        }\n    \n        let watchPositionAvgAccuracy = calcAverageAcc(positions);\n        state = {...state, watchPositionAvgAccuracy: watchPositionAvgAccuracy};\n        console.log(\"watchPosition acc avg\", watchPositionAvgAccuracy);\n    \n        if(avgAccuracyNotImproved(state)) {\n            return _failMessage(`Accuracy didn't improve - avg`);\n        }\n        \n        if(!accuracyTrendImproves(getAccuracies(positions)) && watchPositionAvgAccuracy <= 4) {\n            return _failMessage(`Accuracy didn't improve - trend`);\n        }\n        \n        return _successMessage(`Watch position test - Passed (${positions.length} samples)`);\n    }\n    \n    return _failMessage(`Watch position test - Failed (no geo data)`);\n}\n\nexport function hasBigPositionJumps(positions) {\n    try {\n        if(positions.length > 0){\n            console.log(\"big Positions start\");\n            \n            const distances = positions.map((position, index, positions) => {\n                if(index !== 0){\n                    \n                    const lat1 = positions[index - 1].coords.latitude;\n                    const lon1 = positions[index - 1].coords.longitude;\n                    const lat2 = position.coords.latitude;\n                    const lon2 = position.coords.longitude;\n    \n                    return calcCrow(lat1, lon1, lat2, lon2);\n                }\n                return 0;\n            });\n        \n            console.log(\"distances\", distances);\n            \n            const bigJumps = _getInvalidDistances(distances, 10);\n            console.log(\"bigJumps\", bigJumps);\n            \n            return bigJumps.length > 0;\n        }\n    } catch (e) {\n        return false;\n    }\n    \n    return false;\n}\n\nexport function calcCrow(lat1, lon1, lat2, lon2) {\n    if ((lat1 === lat2) && (lon1 === lon2)) {\n        return 0;\n    }\n    \n    const R = 6371; // km\n    const dLat = toRad(lat2-lat1);\n    const dLon = toRad(lon2-lon1);\n    const _lat1 = toRad(lat1);\n    const _lat2 = toRad(lat2);\n    \n    const a = Math.sin(dLat/2) * Math.sin(dLat/2) +\n        Math.sin(dLon/2) * Math.sin(dLon/2) * Math.cos(_lat1) * Math.cos(_lat2);\n    const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1-a));\n    return R * c;\n}\n\n// Converts numeric degrees to radians\nfunction toRad(value) {\n    return value * Math.PI / 180;\n}\n\nexport function calculateVelocity(lat2, lon2, lat0, lon0, t2, t0, index) {\n    const deltaX = calcCrow(lat2, lon2, lat0, lon0) * 1000; //in m\n    const deltaT = (t2 - t0) / 1000; //in sec\n    // console.table([[\"lat0\", \"lon0\"],[lat0, lon0],[\"lat2\", \"lon2\"], [lat2, lon2]] );\n    // console.info(\"deltaX\", deltaX, \" deltaT\", deltaT);\n    let velocity = calcVelocity(deltaX, deltaT);\n    console.log(\"velocity\", velocity, \"m/s\", \" #\", index);\n    return velocity;\n}\n\n\nfunction calcVelocity(deltaX, deltaT){\n    if(deltaT && deltaX){\n        return deltaX/deltaT;\n    }\n    return 0;\n}\n\n// assumes valid periods of time\nfunction _getInvalidDistances(distances, validDistance) {\n    return distances.filter((distance) => distance > validDistance);\n}\n\n\nexport function hasTimeRefDifferences(positions) {\n    if(positions.length > 0){\n        \n        const timeDiffs = positions.map((position, index, positions) => {\n            const t2Ref = position.timestampRef;\n            const t2 = position.timestamp;\n            \n            let tDiff = (t2Ref - t2)/1000;\n            console.log(t2Ref, \"vs\", t2, tDiff, \"sec diff\");\n            return tDiff;\n        });\n        \n        console.log(\"timeDiffs\", timeDiffs);\n    }\n}\n\nexport function hasBadVelocity(positions) {\n    try {\n        if(positions.length > 0){\n            \n            const lat0 = positions[0].coords.latitude;\n            const lon0 = positions[0].coords.longitude;\n            const t0 = positions[0].timestamp;\n            \n            const velocities = positions.map((position, index, positions) => {\n                if(index !== 0){\n                    \n                    const lat2 = position.coords.latitude;\n                    const lon2 = position.coords.longitude;\n                    const t2 = position.timestamp;\n\n                    return calculateVelocity(lat2, lon2, lat0, lon0, t2, t0, index);\n                }\n                return 0;\n            });\n    \n            const velocitiesCurrent = positions.map((position, index, positions) => {\n                if(index !== 0){\n                    const latprev = positions[index-1].coords.latitude;\n                    const lonprev = positions[index-1].coords.longitude;\n                    const tprev = positions[index-1].timestamp;\n                    \n                    const lat = position.coords.latitude;\n                    const lon = position.coords.longitude;\n                    const t = position.timestamp;\n            \n                    return calculateVelocity(lat, lon, latprev, lonprev, t, tprev, index);\n                }\n                return 0;\n            });\n    \n            const speeds = positions.map((position, index, positions) => {\n                return position.coords.speed;\n            });\n            \n            console.log(\"velocities\", velocities);\n            console.log(\"velocities Current\", velocitiesCurrent);\n            console.log(\"speeds\", speeds);\n            \n            return false;\n        }\n    } catch (e) {\n        return false;\n    }\n    \n    return false;\n}\n\n\nfunction hasBadAccuracy(positions) {\n    try {\n        if(positions.length >= 10){\n            const bad1mAccuracies = positions.filter((position) => {\n                return position.coords.accuracy === 1\n            });\n            \n            console.log(\"bad1mAccuracies\", bad1mAccuracies);\n            return bad1mAccuracies.length === positions.length;\n        }\n        \n    } catch (e) {\n        return false;\n    }\n    return false;\n}\n\nfunction hasNoLatLongAccVariations(positions) {\n    try {\n        if(positions.length >= 10){\n            const constLat = [...new Set(positions.map((position) => position.coords.latitude))];\n            const constLong = [...new Set(positions.map((position) => position.coords.longitude))];\n            const constAcc = [...new Set(positions.map((position) => position.coords.accuracy))];\n\n            console.log(\"constLat\", constLat);\n            console.log(\"constLong\", constLong);\n            console.log(\"constAcc\", constAcc);\n\n            return constLat.length === 1 && constAcc.length === 1 && constLong.length === 1;\n        }\n    } catch (e) {\n        return false;\n    }\n    \n    return false;\n}\n\nexport function calcAverageAcc(positions) {\n    try {\n        if(positions.length > 0){\n            \n            // const lat0 = positions[0].coords.latitude;\n            // const lon0 = positions[0].coords.longitude;\n            // const t0 = positions[0].timestamp;\n            \n            const accuracies = positions.map((position, index) => {\n                return position.coords.accuracy;\n            });\n            \n            console.log(\"accuracies\", accuracies);\n            \n            const sum = accuracies.reduce((acc, a) => acc + a, 0);\n            return sum/accuracies.length;\n        }\n    } catch (e) {\n        return -1;\n    }\n    \n    return -1;\n}\n\nexport function getAccuracies(positions) {\n    try {\n        if(positions.length > 0){\n            \n            // const lat0 = positions[0].coords.latitude;\n            // const lon0 = positions[0].coords.longitude;\n            // const t0 = positions[0].timestamp;\n\n            return positions.map((position, index) => {\n                return position.coords.accuracy;\n            });\n        }\n    } catch (e) {\n        return [];\n    }\n    \n    return [];\n}\n\nfunction avgAccuracyNotImproved({currentPositionAvgAccuracy, watchPositionAvgAccuracy}) {\n    console.log(\"Avg Acc current\", currentPositionAvgAccuracy, \"vs watch\", watchPositionAvgAccuracy);\n    return currentPositionAvgAccuracy < watchPositionAvgAccuracy;\n}\n\nfunction accuracyTrendImproves(accuracies) {\n    if(accuracies && accuracies.length > 0) {\n        const improved = accuracies.filter((acc, i) => {\n            if(i > 0) {\n                return acc <= accuracies[i-1];\n            }\n            return false;\n        });\n        console.log(\"accuracy trend\", improved);\n        console.log(\"accuracy trend count\", improved.length, \"vs\", accuracies.length - 1);\n        const trend = ((improved.length * 100) / (accuracies.length - 1));\n        console.log(\"accuracy trend \", trend);\n        return trend >= 60;\n    }\n    \n    return true;\n}\n\n// function calculateDistances(coordinates) {\n//     let i;\n//     let distances = [];\n//     for (i=1; i < coordinates.length-1; i++) {\n//         distances.push(_calcDistance(coordinates[i-1], coordinates[i], 'K'));\n//     }\n//     return distances;\n// }\n//\n// function _calcDistance(n, m, unit) {\n//     const lat1 = m.coords.latitude;\n//     const lat2 = n.coords.latitude;\n//     const lon1 = m.coords.longitude;\n//     const lon2 = n.coords.longitude;\n//\n//     if ((lat1 === lat2) && (lon1 === lon2)) {\n//         return 0;\n//     }\n//\n//     const radlat1 = Math.PI * lat1/180;\n//     const radlat2 = Math.PI * lat2/180;\n//     const theta = lon1-lon2;\n//     const radtheta = Math.PI * theta/180;\n//     let dist = Math.sin(radlat1) * Math.sin(radlat2) + Math.cos(radlat1) * Math.cos(radlat2) * Math.cos(radtheta);\n//     if (dist > 1) {\n//         dist = 1;\n//     }\n//     dist = Math.acos(dist);\n//     dist = dist * 180/Math.PI;\n//     dist = dist * 60 * 1.1515;\n//     if (unit===\"K\") { dist = dist * 1.609344 }\n//     if (unit===\"N\") { dist = dist * 0.8684 }\n//     return dist;\n//\n// }\n\n\n\n","import React, {Component} from 'react';\nimport './App.css';\nimport {\n    geCurrentPosition,\n    getResultDeviceTrust,\n    hasLiedIANATimezone,\n    watchPosition,\n    hasLiedTimeZoneOffset\n} from \"./services/geo\";\nimport {\n    getLanguage, getLanguages,\n    getTimezone,\n    getTimezoneOffsetVsUTC\n} from \"./services/hardware\";\nimport {Observation, ObservationTest} from \"./Observation\";\nimport * as finger from \"./services/fingerprint2\";\nimport {calcCrow, calculateVelocity} from \"./services/calculations\";\n\n\nconst exportToCSV = function (id, name, arrData) {\n    \n    if (!arrData.length) {\n        return;\n    }\n    \n    let csvContent = \"data:text/csv;charset=utf-8,\";\n    \n    let heading = \"latitude,longitude,accuracy,altitude,altitudeAccuracy,heading,speed\".split(\",\");\n    // headers\n    csvContent += heading.join(\",\") + ',timestamp,ms,s,jitter,timestampRef,timestampDiffMs,distanceKm,velocity\\r\\n';\n    \n    arrData.forEach(function (item, index) {\n        const prevItem = index > 0 ? arrData[index-1] : null;\n        csvContent += csvRow({item:item, item0: arrData[0], prevItem: prevItem, heading:heading, index:index + 1});\n    });\n    \n    let encodedUri = encodeURI(csvContent);\n    let link = document.createElement(\"a\");\n    link.setAttribute(\"href\", encodedUri);\n    link.setAttribute(\"download\", \"customers.csv\");\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n    link.click();\n    console.log(\"clicked\");\n};\n\nconst csvRow = function ({item, item0, prevItem, heading, index}) {\n    let dataArray = heading.map((key) => {\n        return item.coords[key] === null ? '' : item.coords[key].toString();\n    });\n    dataArray.push(item.timestamp);\n    //ms\n    const timestampDiffToOriginal = item.timestamp - item0.timestamp;\n    dataArray.push(timestampDiffToOriginal);\n    //s\n    dataArray.push(timestampDiffToOriginal/1000);\n    //jitter\n    const jitter = prevItem ? (item.timestamp - prevItem.timestamp)/1000 : 0;\n    dataArray.push(jitter);\n    //timestampRef\n    dataArray.push(item.timestampRef);\n    //timestampDiffMs\n    const timestampDiff = (item.timestampRef - item.timestamp);\n    console.log(\"#\",index, timestampDiff);\n    dataArray.push(timestampDiff);\n    //distanceKm\n    const distance = prevItem ? calcCrow(prevItem.coords.latitude, prevItem.coords.longitude, item.coords.latitude, item.coords.longitude) : 0;\n    dataArray.push(distance);\n    //velocity\n    dataArray.push(calculateVelocity(item.coords.latitude, item.coords.longitude, item0.coords.latitude, item0.coords.longitude, item.timestamp, item0.timestamp, index));\n    return dataArray.join(',') + '\\r\\n';\n};\n\nfunction createNewPositionEntry(position) {\n    let newEntry = {coords: {}, timestamp: position.timestamp, timestampRef: Date.now()};\n    for (let key in position.coords) {\n        // if (position.coords.hasOwnProperty(key)) {\n        console.log(\"key: \", key, position.coords[key]);\n        newEntry.coords[key] = position.coords[key];\n        // }\n    }\n    return newEntry;\n}\n\nclass TestingGround extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            position: \"\",\n            error: \"\",\n            errorOne: \"\",\n            prevWatchPositions: [],\n            prevOnePositions: []\n        };\n        \n        this.handleWatchChanges = this.handleWatchChanges.bind(this);\n        this.handleWatchClick = this.handleWatchClick.bind(this);\n        this.handleOneClick = this.handleOneClick.bind(this);\n        this.handleOneChanges = this.handleOneChanges.bind(this);\n        this.downloadWatchCSV = this.downloadWatchCSV.bind(this);\n        this.downloadOneCSV = this.downloadOneCSV.bind(this);\n    }\n    \n    handleWatchChanges({position, error}) {\n        // this.setState({position: position, error: error});\n        if (!error) {\n            let newEntry = createNewPositionEntry(position);\n            this.setState({prevWatchPositions: [].concat([...this.state.prevWatchPositions], newEntry)});\n        } else {\n            this.setState({error: error});\n        }\n    }\n    \n    handleOneChanges({position, error}) {\n        // this.setState({position: position, error: error});\n        if (!error) {\n            let newEntry = createNewPositionEntry(position);\n            this.setState({prevOnePositions: [].concat([...this.state.prevOnePositions], newEntry)});\n        } else {\n            this.setState({errorOne: error});\n        }\n    }\n    \n    \n    handleWatchClick(e) {\n        watchPosition(this.handleWatchChanges);\n    }\n    \n    handleOneClick() {\n        geCurrentPosition(this.handleOneChanges);\n    }\n    \n    // componentDidMount() {\n    //     // window.addEventListener('orientationchange', this.doOnOrientationChange);\n    //     // this.doOnOrientationChange();\n    // }\n    \n    // doOnOrientationChange() {\n    //     if (window.innerHeight > window.innerWidth) {\n    //         console.log(\"portrait\");\n    //     } else {\n    //         console.log(\"landscape\")\n    //     }\n    // }\n    \n    downloadOneCSV(event) {\n        event.stopPropagation();\n        exportToCSV(\"downloadoneCSV\", \"getCurrentPosition\", this.state.prevOnePositions);\n        return false;\n    }\n    \n    downloadWatchCSV(event) {\n        event.stopPropagation();\n        exportToCSV(\"downloadwatchCSV\", \"watchPosition\", this.state.prevWatchPositions);\n        return false;\n    }\n    \n    render() {\n        return (\n            <div className=\"App\">\n                <section className=\"side-container\">\n                    <header>Geolocation</header>\n                    <div className={\"details\"}>\n                        <h1> Watch Position</h1>\n                        <button onClick={this.handleWatchClick}>Start Watching Geolocation</button>\n                        <code>{this.state.error}</code>\n                        \n                        <ul className={\"entries\"}>\n                            <li key={\"w0\"}>\n                                <code className={\"index-column\"}>#</code>\n                                <code>latitude</code>\n                                <code>longitude</code>\n                                <code>accuracy</code>\n                                <code>altitude</code>\n                                <code>altitudeAccuracy</code>\n                                <code>heading</code>\n                                <code>speed</code>\n                                <code>timestamp</code>\n                                {/*<code>Date: {this.state.position && (new Date(this.state.position.timestamp).toISOString(\"DD-MM-YYYY HH:mm:ss\"))}</code>*/}\n                            </li>\n                            {this.state.prevWatchPositions.map((pos, index) => (\n                                <li key={\"w\" + index}>\n                                    <code className={\"index-column\"}>{index}.</code>\n                                    <code>{pos.coords.latitude}</code>\n                                    <code>{pos.coords.longitude}</code>\n                                    <code>{pos.coords.accuracy}m</code>\n                                    <code>{pos.coords.altitude}</code>\n                                    <code>{pos.coords.altitudeAccuracy}</code>\n                                    <code>{pos.coords.heading}</code>\n                                    <code>{pos.coords.speed}</code>\n                                    <code>+{pos.timestamp - this.state.prevWatchPositions[0].timestamp} {(pos.timestamp + \"\").length === 10 ? \"sec\" : \"ms\"}</code>\n                                    {/*<code>Date: {this.state.position && (new Date(this.state.position.timestamp).toISOString(\"DD-MM-YYYY HH:mm:ss\"))}</code>*/}\n                                </li>))\n                            }\n                        </ul>\n                        <a id=\"downloadwatchCSV\" onClick={this.downloadWatchCSV}>Download CSV</a>\n                        \n                        <br/>\n                        <br/>\n                        <br/>\n                        <br/>\n                        <br/>\n                        <br/>\n                        <br/>\n                        <br/>\n                        <br/>\n                    </div>\n                    <div className={\"details\"}>\n                        <h1> One time Position</h1>\n                        <button onClick={this.handleOneClick}>Get Quick Geolocation</button>\n                        <code>{this.state.error}</code>\n                        <ul className={\"entries\"}>\n                            <li key=\"0\">\n                                <code className={\"index-column\"}>#</code>\n                                <code>latitude</code>\n                                <code>longitude</code>\n                                <code>accuracy</code>\n                                <code>altitude</code>\n                                <code>altitudeAccuracy</code>\n                                <code>heading</code>\n                                <code>speed</code>\n                                <code>timestamp</code>\n                                {/*<code>Date: {this.state.position && (new Date(this.state.position.timestamp).toISOString(\"DD-MM-YYYY HH:mm:ss\"))}</code>*/}\n                            </li>\n                            {this.state.prevOnePositions && this.state.prevOnePositions.map((pos, index) => (\n                                <li key={index}>\n                                    <code className={\"index-column\"}>{index}.</code>\n                                    <code>{pos.coords.latitude}</code>\n                                    <code>{pos.coords.longitude}</code>\n                                    <code>{pos.coords.accuracy}m</code>\n                                    <code>{pos.coords.altitude}</code>\n                                    <code>{pos.coords.altitudeAccuracy}</code>\n                                    <code>{pos.coords.heading}</code>\n                                    <code>{pos.coords.speed}</code>\n                                    <code>+{pos.timestamp - this.state.prevOnePositions[0].timestamp} {(pos.timestamp + \"\").length === 10 ? \"sec\" : \"ms\"}</code>\n                                    {/*<code>Date: {this.state.position && (new Date(this.state.position.timestamp).toISOString(\"DD-MM-YYYY HH:mm:ss\"))}</code>*/}\n                                </li>))\n                            }\n                        </ul>\n                        <a id=\"downloadoneCSV\" onClick={this.downloadOneCSV}>Download CSV</a>\n                    </div>\n                    <br/>\n                    <br/>\n                    <br/>\n                    <br/>\n                    <br/>\n                    <br/>\n                    <br/>\n                    <br/>\n                    <br/>\n                    \n                    <div className={`head` + (getResultDeviceTrust() < 50 ? \" sad\" : \"\")}>\n                        <div className=\"face\">\n                            <div className=\"mouth\"/>\n                            <div className=\"eye-group\">\n                                <div className=\"eye eye-left\"/>\n                                <div className=\"eye eye-right\"/>\n                            </div>\n                        </div>\n                    </div>\n                    \n                    <div>Device Confidence: {getResultDeviceTrust()}</div>\n                    {/*<Observation title={\"Is Mobile\"} value={JSON.stringify(isMobile())}/>*/}\n                    \n                    {/*<Observation title={\"Dev Tools\"} value={devToolsOpen()}/>*/}\n                    {/*<Observation title={\"Browser data\"} value={getBrowserData()}/>*/}\n                    {/*<Observation title={\"GPU\"} value={JSON.stringify(getVideoCardInfo())}/>*/}\n                    \n                    <div className={\"details\"}>\n                        \n                        <ObservationTest title={\"OS ok\"} passed={!finger.getHasLiedOs()}/>\n                        <ObservationTest title={\"Browser ok\"} passed={!finger.getHasLiedBrowser()}/>\n                        \n                        <ObservationTest title={\"Languages ok\"} passed={!finger.getHasLiedLanguages()}/>\n                        <Observation title={\"Language\"} value={JSON.stringify(getLanguage())}/>\n                        <Observation title={\"Languages\"} value={JSON.stringify(getLanguages())}/>\n                        \n                        <ObservationTest title={\"Resolution ok\"} passed={!finger.getHasLiedResolution()}/>\n                        \n                        <ObservationTest\n                            title={`Timezone IANA`}\n                            passed={!hasLiedIANATimezone(getTimezone())}/>\n                        <Observation title={\"Timezone IANA\"}\n                                     value={JSON.stringify(getTimezone())}/>\n                        \n                        <ObservationTest\n                            title={`Timezone Offset`}\n                            passed={!hasLiedTimeZoneOffset(getTimezoneOffsetVsUTC())}/>\n                        <Observation title={\"Timezone Offset\"}\n                                     value={JSON.stringify(getTimezoneOffsetVsUTC()) + \"hr(s)\"}/>\n                        \n                        \n                        <br/>\n                        <br/>\n                        <br/>\n                        <br/>\n                        <br/>\n                        <br/>\n                        <br/>\n                        <br/>\n                        <br/>\n                    </div>\n                \n                </section>\n                <footer/>\n            </div>\n        );\n    }\n}\n\nexport default TestingGround;\n","const options = {\n    enableHighAccuracy: true,\n    timeout: 60000,\n    maximumAge: 0\n};\nlet geoHandler;\nlet geoHandlerOne;\nlet data = {\n    position: \"\",\n    error: \"\"\n};\n\nexport function isGeoAvailable() {\n    return \"geolocation\" in navigator;\n}\n\n\nexport function geCurrentPosition(handler) {\n    if (isGeoAvailable()) {\n        geoHandlerOne = handler;\n        navigator.geolocation.getCurrentPosition(successHandler, errorHandler, options);\n    } else {\n        throw new Error(\"geolocation not available\");\n    }\n}\nfunction successHandler(pos) {\n    const crd = pos.coords;\n    \n    data.position = pos;\n    console.log(pos);\n    geoHandlerOne && geoHandlerOne({position: pos});\n    \n    console.log('Your current position is:');\n    console.log(`Latitude : ${crd.latitude}`);\n    console.log(`Longitude: ${crd.longitude}`);\n    console.log(`More or less ${crd.accuracy} meters.`);\n}\n\nfunction errorHandler(err) {\n    // error.code can be:\n    //   0: unknown error\n    //   1: permission denied\n    //   2: position unavailable (error response from location provider)\n    //   3: timed out\n    let reason = \"unknown error\";\n    if (err.code === 1) {\n        reason = \"permission denied\";\n    } else if (err.code === 2) {\n        reason = \"position unavailable (error response from location provider)\";\n    } else if (err.code === 3) {\n        reason = \"timed out\";\n    }\n    \n    data.error = `ERROR(${err.code}): reason: ${reason}, ${err.message}`;\n    \n    geoHandler && geoHandler({error: data.error});\n    geoHandlerOne && geoHandlerOne({error: data.error});\n    console.warn(data.error);\n}\n\nexport function watchPosition(handler) {\n    let id;\n    if (isGeoAvailable()) {\n        \n        geoHandler = handler;\n        id = navigator.geolocation.watchPosition(successWatchHandler, errorHandler, options);\n    }\n    return id;\n}\n\nfunction successWatchHandler(pos) {\n    var crd = pos.coords;\n    \n    data.position = pos;\n    console.log(pos);\n    geoHandler && geoHandler({position: pos});\n    \n    console.log('Watch: Your current position is:', new Date());\n    console.log(`Latitude : ${crd.latitude}`);\n    console.log(`Longitude: ${crd.longitude}`);\n    console.log(`More or less ${crd.accuracy} meters.`);\n}","export function isTrustworthyDevice() {\n    return isTrustworthyMobile() || isTrustworthyDesktop();\n}\n\nexport function isTrustworthyMobile() {\n    return isTrustworthyAndroid() || isTrustworthyIphoneOrIpad();\n}\n\nfunction isTrustworthyAndroid() {\n    return navigator.userAgent.indexOf('Android') !== -1 && (navigator.platform.indexOf('Linux') !== -1 || navigator.platform.indexOf('Android') !== -1);\n}\n\nfunction isTrustworthyIphoneOrIpad() {\n    return (isTrustworthyIphone() || isTrustworthyIpad());\n}\n\nfunction isTrustworthyIphone() {\n    return navigator.userAgent.indexOf('iPhone') !== -1 && /iPhone/.test(navigator.platform);\n}\n\nfunction isTrustworthyIpad() {\n    return navigator.userAgent.indexOf('iPad') !== -1 && /iPad/.test(navigator.platform);\n}\n\nexport function isXcodeSimulator() {\n    const webGlContext = document.createElement('canvas').getContext('webgl');\n    const rendererExtension = webGlContext.getExtension('WEBGL_debug_renderer_info');\n    const webGlRenderer = webGlContext.getParameter(rendererExtension.UNMASKED_RENDERER_WEBGL);\n    return webGlRenderer.indexOf('Apple Software Renderer') !== -1;\n}\n\nexport function isTrustworthyDesktop() {\n    return isTrustworthyWindows() || isTrustworthyMacos();\n}\n\nfunction isTrustworthyWindows() {\n    return navigator.userAgent.indexOf('Windows') !== -1 && navigator.platform.indexOf('Win32') !== -1;\n}\n\nfunction isTrustworthyMacos() {\n    return navigator.userAgent.indexOf('Macintosh') !== -1 && navigator.platform.indexOf('MacIntel') !== -1;\n}","import React from \"react\";\nimport {Map, Circle, Marker, Popup, TileLayer} from \"react-leaflet\";\n\nconst LeafletMap = ({zoom, lat = 51.504, lng = 0.1, acc}) => {\n    const position = [lat, lng];\n    const radius = acc ? Math.floor(acc) : 10;\n    return (\n        <Map center={position} zoom={zoom}>\n            <TileLayer\n                attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n                url='https://{s}.tile.osm.org/{z}/{x}/{y}.png'\n            />\n            <Circle center={position} radius={radius}>\n                <Marker position={position}>\n                    <Popup>\n                        A pretty CSS3 popup. <br/> Easily customizable.\n                    </Popup>\n                </Marker>\n            </Circle>\n        </Map>\n    );\n};\n\nexport default LeafletMap;","import React from 'react';\nimport {isGeoAvailable, geCurrentPosition, watchPosition} from \"./services/geolocation_v2\";\nimport {testCurrentPositions, testWatchPositions} from \"./services/calculations\";\n\nimport {\n    getLanguage, getLanguages,\n    getTimezone,\n    getTimezoneOffsetVsUTC,\n    getVideoCardInfo\n} from \"./services/hardware\";\nimport {isTrustworthyDevice, isTrustworthyMobile, isTrustworthyDesktop} from \"./trustworthy\";\nimport LeafletMap from \"./components/LeafletMap\";\n\nconst FINAL_FAIL_MESSAGE = \"Hmm... not enough to continue\";\n\nclass Home extends React.Component {\n    constructor(props) {\n        super(props);\n        this.isTrustworthy = false;\n        const {renderer: videoCardRender} = getVideoCardInfo();\n        this.state = {\n            currentPositions: [],\n            watchPositions: [],\n            position: {\n                coords: {},\n                timestamp: 0\n            },\n            error: \"\",\n            info: {\n                message:\"\",\n                testFinished: false,\n                passed: false\n            },\n            infoWatch: {\n                message:\"\",\n                testFinished: false,\n                passed: false\n            },\n            infoFinal: {\n                message:\"\",\n                testFinished: false,\n                passed: false\n            },\n            payload: {\n                \"version\": 1,\n                \"source\": \"WEB\", // Hardcoded, one of : [WEB, ANDROID NATIVE, IOS NATIVE]\n                \"status\": \"NOLOC\", // To be finalised : One of : [OK, NOLOC]     <- suggest if you need more\n                \"location\": {\n                    \"trust\": 0, // Integers please 0-100\n                    \"latitude\": \"\", // Please no more than 6dp\n                    \"longitude\": \"\", // Please no more than 6dp\n                    \"accuracy\": \"\", // range is in meters\n                },\n                \"device\": { // Web specific values, as we said, these will now change by source\n                    \"screenRatio\": (window.screen.width/window.screen.height ).toFixed(2),\n                    \"utcOffset\": getTimezoneOffsetVsUTC(),\n                    \"platform\": window.navigator.platform,\n                    \"gpu\": videoCardRender\n                }\n            }\n        };\n        \n        this.handleCurrentPosition = this.handleCurrentPosition.bind(this);\n        this.handleWatchPosition = this.handleWatchPosition.bind(this);\n\n        this.currentTimerId = 0;\n        this.watchTimerId = 0;\n    }\n\n    componentDidMount() {\n        const self = this;\n        this.setState({\n            info: {\n                message:\"Running current position test....please wait\"\n            }\n        });\n        \n        this.isTrustworthy = isTrustworthyDevice();\n        this.isTrustworthyMobile = isTrustworthyMobile();\n        this.isTrustworthyDesktop = isTrustworthyDesktop();\n\n        this.currentTimerId = setInterval(() => {\n            geCurrentPosition(this.handleCurrentPosition);\n        }, 1000);\n\n        setTimeout(() => {\n            clearInterval(self.currentTimerId);\n            self.runCurrentPositionTest();\n        }, 1100 * 11);\n    }\n    \n    handleCurrentPosition({position, error}) {\n        const self = this;\n        if (position) {\n            const positionData = {\n                    coords: {\n                        latitude: position.coords.latitude,\n                        longitude: position.coords.longitude,\n                        accuracy: position.coords.accuracy,\n                        altitude: position.coords.altitude,\n                        altitudeAccuracy: position.coords.altitudeAccuracy,\n                        heading: position.coords.heading,\n                        speed: position.coords.speed,\n                    },\n                    timestamp: position.timestamp,\n                    timestampRef: (new Date().getTime())\n                };\n            self.setState({position: positionData});\n            self.setState({currentPositions: [...self.state.currentPositions, positionData]});\n        }\n        \n        if (error) {\n            self.setState({error: error});\n        }\n    }\n    \n    runCurrentPositionTest() {\n        const info = testCurrentPositions(this.state.currentPositions);\n        this.setState({info: {...info}});\n        if(info.passed){\n            this.startWatchTest();\n        } else {\n            this.setState({infoFinal: {message:FINAL_FAIL_MESSAGE, passed: false, testFinished: true}});\n        }\n    }\n    \n    startWatchTest() {\n        if(isGeoAvailable()){\n            const self = this;\n            this.setState({\n                infoWatch: {\n                    message: \"Running watch position test....please wait\"\n                }\n            });\n\n            self.watchTimerId = watchPosition(this.handleWatchPosition);\n    \n            setTimeout(() => {\n                window.navigator.geolocation.clearWatch(self.watchTimerId);\n                self.runWatchPositionTest();\n            }, 1000 * 25);\n        }\n    }\n\n    handleWatchPosition({position, error}) {\n        const self = this;\n        if (position) {\n            const positionData = {\n                coords: {\n                    latitude: position.coords.latitude,\n                    longitude: position.coords.longitude,\n                    accuracy: position.coords.accuracy,\n                    altitude: position.coords.altitude,\n                    altitudeAccuracy: position.coords.altitudeAccuracy,\n                    heading: position.coords.heading,\n                    speed: position.coords.speed,\n                },\n                timestamp: position.timestamp,\n                timestampRef: (new Date().getTime())\n            };\n            self.setState({position: positionData});\n            self.setState({watchPositions: [...self.state.watchPositions, positionData]});\n        }\n\n        if (error) {\n            self.setState({error: error});\n        }\n    }\n    \n    runWatchPositionTest() {\n        const infoWatch = testWatchPositions(this.state.watchPositions);\n        this.setState({infoWatch: {...infoWatch}});\n        if(infoWatch.passed){\n            this.setState({infoFinal: {message:\"All good ... you may pass\", passed: true, testFinished: true}});\n            this.generatePayload();\n        } else {\n            this.setState({infoFinal: {message: FINAL_FAIL_MESSAGE, passed: false, testFinished: true}});\n        }\n    }\n    \n    generatePayload() {\n    \n    }\n    \n    render() {\n        let googleMapsLink = \"\";\n        if(this.state.position.coords) {\n            googleMapsLink = `https://www.google.com/maps/search/?api=1&query=${this.state.position.coords.latitude},${this.state.position.coords.longitude}`;\n        }\n        const isTrustworthy = this.isTrustworthy;\n        let deviceType = this.isTrustworthyDesktop ? \"desktop\" : \"none\";\n        if(this.isTrustworthyMobile) {\n            deviceType = \"mobile\";\n        }\n        const position = this.state.position;\n        const error = this.state.error;\n        const colourbits = window.screen.colorDepth;\n        const colournumber = Math.pow (2, colourbits);\n        const {vendor: videoCardVendor, renderer: videoCardRender} = getVideoCardInfo();\n        return (\n            <div className=\"container\">\n                <div className=\"wrapper\">\n                <div className=\"sections\">\n                    <section className={\"section tests\"}>\n                        <p className={`test ${this.state.info.testFinished ? this.state.info.passed ? \"ok\": \"not-ok\" : \"not-finished\"}`}>{this.state.info.message}</p>\n                        <p className={`test ${this.state.infoWatch.testFinished ? this.state.infoWatch.passed ? \"ok\": \"not-ok\" : \"not-finished\"}`}>{this.state.infoWatch.message}</p>\n                        <p className={`test final ${this.state.infoFinal.testFinished ? this.state.infoFinal.passed ? \"ok\": \"not-ok\" : \"not-finished\"}`}>{this.state.infoFinal.message}</p>\n                    </section>\n    \n                    <section className={\"section\"}>\n                        <textarea name=\"payload\">\n                            {JSON.stringify(this.state.payload, undefined, 4)}\n                        </textarea>\n                    </section>\n                    <section className={\"section\"}>\n                        <LeafletMap lat={position.coords.latitude} lng={position.coords.longitude} zoom={13} acc={position.coords.accuracy}/>\n                        <div className=\"position-details\">\n                            <h2>Position <a href={googleMapsLink} target=\"_blank\" rel=\"noopener noreferrer\">\n                                <i className=\"marker\"><i className=\"marker-core\" /></i>\n                            </a></h2>\n                            <ul>\n                                <li>\n                                    <div>Latitude</div>\n                                    <div>{position.coords.latitude}</div>\n                                </li>\n                                <li>\n                                    <div>Longitude</div>\n                                    <div>{position.coords.longitude}</div>\n                                </li>\n                                <li>\n                                    <div>Accuracy</div>\n                                    <div>{position.coords.accuracy} m</div>\n                                </li>\n                                <li>\n                                    <div>Altitude</div>\n                                    <div>{position.coords.altitude}</div>\n                                </li>\n                                <li>\n                                    <div>Altitude Accuracy</div>\n                                    <div>{position.coords.altitudeAccuracy}</div>\n                                </li>\n                                <li>\n                                    <div>Heading</div>\n                                    <div>{position.coords.heading}</div>\n                                </li>\n                                <li>\n                                    <div>Speed</div>\n                                    <div>{position.coords.speed}</div>\n                                </li>\n                            </ul>\n                            <br />\n                            <div className={error ? \"text-error\" : \"\"}>{error ? \"Error: \" + error : \"\"}</div>\n                        </div>\n                    </section>\n                \n                \n                </div>\n                </div>\n            </div>\n        )\n    }\n\n    componentWillUnmount() {\n        if(isGeoAvailable() && this.watchTimerId){\n            navigator.geolocation.clearWatch(this.watchTimerId);\n        }\n        if(this.currentTimerId){\n            clearInterval(this.currentTimerId);\n        }\n    }\n\n}\n\nexport default Home;","import React, {Component} from 'react';\nimport './App.css';\nimport {\n    geCurrentPosition,\n    stopWatchPosition,\n    watchPosition,\n} from \"./services/geo\";\n\nfunction createNewPositionEntry(position) {\n    let newEntry = {coords: {}, timestamp: position.timestamp, timestampRef: Date.now()};\n    for (let key in position.coords) {\n        // if (position.coords.hasOwnProperty(key)) {\n        console.log(\"key: \", key, position.coords[key]);\n        newEntry.coords[key] = position.coords[key];\n        // }\n    }\n    return newEntry;\n}\n\nclass TestingGround extends Component {\n    constructor(props) {\n        super(props);\n    \n        this.state = {\n            position: \"\",\n            error: \"\",\n            errorOne: \"\",\n            prevWatchPositions: [],\n            prevOnePositions: [],\n            watchHandlerId: 0\n        };\n        \n        this.handleWatchChanges = this.handleWatchChanges.bind(this);\n        this.handleWatchClick = this.handleWatchClick.bind(this);\n        this.handleOneClick = this.handleOneClick.bind(this);\n        this.handleOneChanges = this.handleOneChanges.bind(this);\n        this.downloadWatchCSV = this.downloadWatchCSV.bind(this);\n        this.downloadOneCSV = this.downloadOneCSV.bind(this);\n    }\n    \n    handleWatchChanges({position, error}) {\n        if (!error) {\n            let newEntry = createNewPositionEntry(position);\n            this.setState({prevWatchPositions: [].concat([...this.state.prevWatchPositions], newEntry)});\n        } else {\n            this.setState({error: error});\n        }\n    }\n    \n    handleOneChanges({position, error}) {\n        // this.setState({position: position, error: error});\n        if (!error) {\n            let newEntry = createNewPositionEntry(position);\n            this.setState({prevOnePositions: [].concat([...this.state.prevOnePositions], newEntry)});\n        } else {\n            this.setState({errorOne: error});\n        }\n    }\n    \n    \n    handleWatchClick(e) {\n        if(this.state.watchHandlerId) {\n            this.stopWatchPosition(this.state.watchHandlerId);\n        } else {\n            const watchHandlerId = watchPosition(this.handleWatchChanges);\n            this.setState({\n                watchHandlerId\n            });\n        }\n    }\n    \n    stopWatchPosition(id) {\n        stopWatchPosition(id);\n        this.setState({\n            watchHandlerId: 0\n        });\n    }\n    \n    handleOneClick() {\n        geCurrentPosition(this.handleOneChanges);\n    }\n    \n    \n    downloadOneCSV(event) {\n        event.stopPropagation();\n        return false;\n    }\n    \n    downloadWatchCSV(event) {\n        event.stopPropagation();\n        return false;\n    }\n    \n    render() {\n        return (\n            <div className=\"App\">\n                <section className=\"side-container\">\n                    <header>Geolocation</header>\n                    <div className={\"details\"}>\n                        <h1> Watch Position</h1>\n                        <button onClick={this.handleWatchClick} className={this.state.watchHandlerId ? \"stop\" : \"start\"}>{this.state.watchHandlerId ? \"Stop\" : \"Start\"} Watching Geolocation</button>\n                        <code>{this.state.error}</code>\n                        <ul className={\"entries\"}>\n                            <li key={\"w0\"}>\n                                <code className={\"index-column\"}>#</code>\n                                <code>latitude</code>\n                                <code>longitude</code>\n                                <code>accuracy</code>\n                                <code>altitude</code>\n                                <code>altitudeAccuracy</code>\n                                <code>heading</code>\n                                <code>speed</code>\n                                <code>timestamp</code>\n                                <code>timestamp</code>\n                                {/*<code>Date: {this.state.position && (new Date(this.state.position.timestamp).toISOString(\"DD-MM-YYYY HH:mm:ss\"))}</code>*/}\n                            </li>\n                            {this.state.prevWatchPositions.map((pos, index) => (\n                                <li key={\"w\" + index}>\n                                    <code className={\"index-column\"}>{index}.</code>\n                                    <code>{pos.coords.latitude}</code>\n                                    <code>{pos.coords.longitude}</code>\n                                    <code>{pos.coords.accuracy}m</code>\n                                    <code>{pos.coords.altitude}</code>\n                                    <code>{pos.coords.altitudeAccuracy}</code>\n                                    <code>{pos.coords.heading}</code>\n                                    <code>{pos.coords.speed}</code>\n                                    <code>{pos.timestamp}</code>\n                                    <code>+{pos.timestamp - this.state.prevWatchPositions[0].timestamp} {(pos.timestamp + \"\").length === 10 ? \"sec\" : \"ms\"}</code>\n                                    {/*<code>Date: {this.state.position && (new Date(this.state.position.timestamp).toISOString(\"DD-MM-YYYY HH:mm:ss\"))}</code>*/}\n                                </li>))\n                            }\n                        </ul>\n                        \n                    </div>\n                \n                </section>\n                <footer/>\n            </div>\n        );\n    }\n}\n\nexport default TestingGround;\n","import React from \"react\";\nimport TestingGround from \"./TestingGround\";\nimport { HashRouter as Router, Route,Switch } from \"react-router-dom\";\nimport Home from \"./Home\";\nimport GeoCollection from \"./GeoCollection\";\n\n\nconst vNo = process.env.REACT_APP_VERSION;\n\n\nexport default function App() {\n    return (\n        <Router >\n            <header><h2>Geo Testing {`v` + vNo}</h2></header>\n            <Switch>\n                <Route exact path=\"/\" component={GeoCollection} />\n                <Route path=\"/home\" component={Home} />\n                <Route path=\"/test\" component={TestingGround} />\n            </Switch>\n        </Router>\n    );\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}