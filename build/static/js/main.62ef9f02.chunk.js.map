{"version":3,"sources":["services/hardware.js","services/fingerprint2.js","services/geo.js","Observation.js","App.js","serviceWorker.js","index.js"],"names":["getTimezoneOffsetVsUTC","Date","getTimezoneOffset","geoHandler","geoHandlerOne","getHasLiedLanguages","navigator","languages","substr","language","err","getHasLiedResolution","window","screen","width","availWidth","height","availHeight","getHasLiedOs","os","userAgent","toLowerCase","oscpu","platform","indexOf","maxTouchPoints","msMaxTouchPoints","plugins","getHasLiedBrowser","browser","productSub","errFirefox","tempRes","eval","toString","length","toSource","errOfErr","options","enableHighAccuracy","timeout","maximumAge","data","position","error","isGeoAvailable","successHandler","pos","console","log","crd","coords","concat","latitude","longitude","accuracy","errorHandler","reason","code","message","warn","successWatchHandler","getResultDeviceTrust","result","finger","tests","hasLiedIANATimezone","Intl","DateTimeFormat","resolvedOptions","timeZone","getTimezone","hasLiedTimeZoneOffset","parseInt","timezone","String","offset","v","Observation","_ref","title","value","react_default","a","createElement","className","ObservationTest","_ref2","passed","JSON","stringify","exportToCSV","id","name","arrData","csvContent","heading","split","join","forEach","item","dataObject","dataArray","map","hr","push","timestamp","csvRow","encodedUri","encodeURI","link","document","setAttribute","body","appendChild","click","removeChild","App","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","errorOne","prevWatchPositions","prevOnePositions","handleWatchChanges","bind","assertThisInitialized","handleWatchClick","handleOneClick","handleOneChanges","downloadWatchCSV","downloadOneCSV","setState","newEntry","key","toConsumableArray","e","handler","geolocation","watchPosition","getCurrentPosition","addEventListener","doOnOrientationChange","innerHeight","innerWidth","event","stopPropagation","_this2","userLanguage","browserLanguage","onClick","index","altitude","altitudeAccuracy","speed","Component","Boolean","location","hostname","match","ReactDOM","render","src_App_0","getElementById","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.62ef9f02.chunk.js","sourcesContent":["export function getBrowserData() {\n    navigator.sayswho= (function(){\n        var ua= navigator.userAgent, tem,\n            M= ua.match(/(opera|chrome|safari|firefox|msie|trident(?=\\/))\\/?\\s*(\\d+)/i) || [];\n        if(/trident/i.test(M[1])){\n            tem=  /\\brv[ :]+(\\d+)/g.exec(ua) || [];\n            return 'IE '+(tem[1] || '');\n        }\n        if(M[1]=== 'Chrome'){\n            tem= ua.match(/\\b(OPR|Edge)\\/(\\d+)/);\n            if(tem!= null) return tem.slice(1).join(' ').replace('OPR', 'Opera');\n        }\n        M= M[2]? [M[1], M[2]]: [navigator.appName, navigator.appVersion, '-?'];\n        if((tem= ua.match(/version\\/(\\d+)/i))!= null) M.splice(1, 1, tem[1]);\n        return M.join(' ');\n    })();\n    \n    return navigator.sayswho;\n}\n\nexport function getVideoCardInfo() {\n    const gl = document.createElement('canvas').getContext('webgl');\n    if (!gl) {\n        return {\n            error: \"no webgl\",\n        };\n    }\n    const debugInfo = gl.getExtension('WEBGL_debug_renderer_info');\n    return debugInfo ? {\n        vendor: gl.getParameter(debugInfo.UNMASKED_VENDOR_WEBGL),\n        renderer:  gl.getParameter(debugInfo.UNMASKED_RENDERER_WEBGL),\n    } : {\n        error: \"no WEBGL_debug_renderer_info\",\n    };\n}\n\nexport function getLanguage() {\n    return (navigator.languages && navigator.languages.length) ? navigator.languages[0] : navigator.userLanguage || navigator.language || navigator.browserLanguage || 'en';\n}\n\nexport function getTimezoneOffsetVsUTC() {\n    return (new Date().getTimezoneOffset())/60 ;\n}\nexport function getTimezone() {\n    try{\n        return Intl.DateTimeFormat().resolvedOptions().timeZone;\n    } catch(err){\n        return \"\";\n    }\n\n}\n\nexport function isMobile() {\n    if (window.matchMedia(\"(orientation: portrait)\").matches) {\n        return window.matchMedia(\"only screen and (max-width: 760px)\").matches;\n    }\n}\n\nexport function devToolsOpen() {\n    // const minimalUserResponseInMiliseconds = 100;\n    // const before = new Date().getTime();\n    // debugger;\n    // const after = new Date().getTime();\n    // // user had to resume the script manually via opened dev tools\n    // return (after - before > minimalUserResponseInMiliseconds) ? \"on\" : \"off\";\n    \n    // var devtools = /./;\n    // devtools.toString = function() {\n    //     this.opened = true;\n    // }\n    //\n    // console.log('%c', devtools);\n}","export const getAdBlock = function () {\n    var ads = document.createElement('div')\n    ads.innerHTML = '&nbsp;'\n    ads.className = 'adsbox'\n    var result = false\n    try {\n        // body may not exist, that's why we need try/catch\n        document.body.appendChild(ads)\n        result = document.getElementsByClassName('adsbox')[0].offsetHeight === 0\n        document.body.removeChild(ads)\n    } catch (e) {\n        result = false\n    }\n    return result\n};\nexport const getHasLiedLanguages = function () {\n    // We check if navigator.language is equal to the first language of navigator.languages\n    if (typeof navigator.languages !== 'undefined') {\n        try {\n            var firstLanguages = navigator.languages[0].substr(0, 2)\n            if (firstLanguages !== navigator.language.substr(0, 2)) {\n                return true\n            }\n        } catch (err) {\n            return true\n        }\n    }\n    return false\n}\nexport const getHasLiedResolution = function () {\n    return window.screen.width < window.screen.availWidth || window.screen.height < window.screen.availHeight\n}\nexport const getHasLiedOs = function () {\n    var userAgent = navigator.userAgent.toLowerCase()\n    var oscpu = navigator.oscpu\n    var platform = navigator.platform.toLowerCase()\n    var os\n    // We extract the OS from the user agent (respect the order of the if else if statement)\n    if (userAgent.indexOf('windows phone') >= 0) {\n        os = 'Windows Phone'\n    } else if (userAgent.indexOf('win') >= 0) {\n        os = 'Windows'\n    } else if (userAgent.indexOf('android') >= 0) {\n        os = 'Android'\n    } else if (userAgent.indexOf('linux') >= 0) {\n        os = 'Linux'\n    } else if (userAgent.indexOf('iphone') >= 0 || userAgent.indexOf('ipad') >= 0) {\n        os = 'iOS'\n    } else if (userAgent.indexOf('mac') >= 0) {\n        os = 'Mac'\n    } else {\n        os = 'Other'\n    }\n    // We detect if the person uses a mobile device\n    var mobileDevice = (('ontouchstart' in window) ||\n        (navigator.maxTouchPoints > 0) ||\n        (navigator.msMaxTouchPoints > 0))\n\n    if (mobileDevice && os !== 'Windows Phone' && os !== 'Android' && os !== 'iOS' && os !== 'Other') {\n        return true\n    }\n\n    // We compare oscpu with the OS extracted from the UA\n    if (typeof oscpu !== 'undefined') {\n        oscpu = oscpu.toLowerCase()\n        if (oscpu.indexOf('win') >= 0 && os !== 'Windows' && os !== 'Windows Phone') {\n            return true\n        } else if (oscpu.indexOf('linux') >= 0 && os !== 'Linux' && os !== 'Android') {\n            return true\n        } else if (oscpu.indexOf('mac') >= 0 && os !== 'Mac' && os !== 'iOS') {\n            return true\n        } else if ((oscpu.indexOf('win') === -1 && oscpu.indexOf('linux') === -1 && oscpu.indexOf('mac') === -1) !== (os === 'Other')) {\n            return true\n        }\n    }\n\n    // We compare platform with the OS extracted from the UA\n    if (platform.indexOf('win') >= 0 && os !== 'Windows' && os !== 'Windows Phone') {\n        return true\n    } else if ((platform.indexOf('linux') >= 0 || platform.indexOf('android') >= 0 || platform.indexOf('pike') >= 0) && os !== 'Linux' && os !== 'Android') {\n        return true\n    } else if ((platform.indexOf('mac') >= 0 || platform.indexOf('ipad') >= 0 || platform.indexOf('ipod') >= 0 || platform.indexOf('iphone') >= 0) && os !== 'Mac' && os !== 'iOS') {\n        return true\n    } else if ((platform.indexOf('win') === -1 && platform.indexOf('linux') === -1 && platform.indexOf('mac') === -1) !== (os === 'Other')) {\n        return true\n    }\n\n    return typeof navigator.plugins === 'undefined' && os !== 'Windows' && os !== 'Windows Phone'\n}\nexport const getHasLiedBrowser = function () {\n    var userAgent = navigator.userAgent.toLowerCase()\n    var productSub = navigator.productSub\n\n    // we extract the browser from the user agent (respect the order of the tests)\n    var browser\n    if (userAgent.indexOf('firefox') >= 0) {\n        browser = 'Firefox'\n    } else if (userAgent.indexOf('opera') >= 0 || userAgent.indexOf('opr') >= 0) {\n        browser = 'Opera'\n    } else if (userAgent.indexOf('chrome') >= 0) {\n        browser = 'Chrome'\n    } else if (userAgent.indexOf('safari') >= 0) {\n        browser = 'Safari'\n    } else if (userAgent.indexOf('trident') >= 0) {\n        browser = 'Internet Explorer'\n    } else {\n        browser = 'Other'\n    }\n\n    if ((browser === 'Chrome' || browser === 'Safari' || browser === 'Opera') && productSub !== '20030107') {\n        return true\n    }\n\n    // eslint-disable-next-line no-eval\n    var tempRes = eval.toString().length\n    if (tempRes === 37 && browser !== 'Safari' && browser !== 'Firefox' && browser !== 'Other') {\n        return true\n    } else if (tempRes === 39 && browser !== 'Internet Explorer' && browser !== 'Other') {\n        return true\n    } else if (tempRes === 33 && browser !== 'Chrome' && browser !== 'Opera' && browser !== 'Other') {\n        return true\n    }\n\n    // We create an error to see how it is handled\n    var errFirefox\n    try {\n        // eslint-disable-next-line no-throw-literal\n        throw 'a'\n    } catch (err) {\n        try {\n            err.toSource()\n            errFirefox = true\n        } catch (errOfErr) {\n            errFirefox = false\n        }\n    }\n    return errFirefox && browser !== 'Firefox' && browser !== 'Other'\n}","import {getLanguage, getTimezone, getTimezoneOffsetVsUTC} from \"./hardware\";\nimport * as finger from \"./fingerprint2\";\n\nconst options = {\n    enableHighAccuracy: true,\n    timeout: 10000,\n    maximumAge: 0\n};\n\nlet geoHandler;\nlet geoHandlerOne;\nlet data = {\n    position: \"\",\n    error: \"\"\n};\n\nexport function isGeoAvailable() {\n    return \"geolocation\" in navigator;\n}\n\nexport function geCurrentPosition(handler) {\n    if (isGeoAvailable()) {\n        geoHandlerOne = handler;\n        navigator.geolocation.getCurrentPosition(successHandler, errorHandler, options);\n    }\n}\n\nfunction successHandler(pos) {\n    console.log(\"g1\");\n    var crd = pos.coords;\n\n    data.position = pos;\n    console.log(pos);\n    geoHandlerOne && geoHandlerOne({position: pos});\n\n    console.log('Your current position is:');\n    console.log(`Latitude : ${crd.latitude}`);\n    console.log(`Longitude: ${crd.longitude}`);\n    console.log(`More or less ${crd.accuracy} meters.`);\n}\n\nfunction errorHandler(err) {\n    // error.code can be:\n    //   0: unknown error\n    //   1: permission denied\n    //   2: position unavailable (error response from location provider)\n    //   3: timed out\n    let reason = \"unknown error\";\n    if (err.code === 1) {\n        reason = \"permission denied\";\n    } else if (err.code === 2) {\n        reason = \"position unavailable (error response from location provider)\";\n    } else if (err.code === 3) {\n        reason = \"timed out\";\n    }\n    \n    data.error = `ERROR(${err.code}): reason: ${reason}, ${err.message}`;\n    \n    geoHandler && geoHandler({error: data.error});\n    geoHandlerOne && geoHandlerOne({error: data.error});\n    console.warn(data.error);\n}\n\n\nexport function watchPosition(handler) {\n    let id;\n    if (isGeoAvailable()) {\n        \n        geoHandler = handler;\n        id = navigator.geolocation.watchPosition(successWatchHandler, errorHandler, options);\n    }\n    return id;\n}\n\nfunction successWatchHandler(pos) {\n    var crd = pos.coords;\n    \n    data.position = pos;\n    console.log(pos);\n    geoHandler && geoHandler({position: pos});\n    \n    console.log('Watch: Your current position is:', new Date());\n    console.log(`Latitude : ${crd.latitude}`);\n    console.log(`Longitude: ${crd.longitude}`);\n    console.log(`More or less ${crd.accuracy} meters.`);\n}\n\n\nexport function getResultDeviceTrust() {\n    let result = 0;\n    let tests = 0;\n\n    result += finger.getHasLiedOs() ? 0 : 100;\n    tests++;\n    result += finger.getHasLiedBrowser() ? 0 : 100;\n    tests++;\n    result += finger.getHasLiedLanguages() ? 0 : 100;\n    tests++;\n    result += finger.getHasLiedResolution() ? 0 : 100;\n    tests++;\n    result += hasLiedIANATimezone(getTimezone()) ? 0 : 100;\n    tests++;\n    result += hasLiedTimeZoneOffset(getTimezoneOffsetVsUTC()) ? 0 : 100;\n    tests++;\n    \n    // result += testLanguage(getLanguage());\n    // tests++;\n   \n\n    return parseInt(result/tests, 10);\n}\n\nexport function hasLiedIANATimezone(timezone) {\n    return String(timezone).toLowerCase() !== \"america/toronto\" ;\n}\n\nexport function hasLiedTimeZoneOffset(offset) {\n    let v = parseInt(offset, 10);\n\n    return !(6 <= v && v <= 4);\n}\n\nexport function testLanguage(language) {\n    //\n    if(language === \"en-CA\" || language === \"fr-CA\" || language === \"en\") {\n        return 100;\n    }\n\n    return 0;\n}","import React from \"react\";\n\nexport function Observation({title, value}) {\n\n    return <div className=\"observation\">{title}: <span>{value}</span></div>\n}\n\nexport function ObservationTest({title, passed}) {\n\n    return (<div className={`observation observation-test ${passed ? \"\" : \"failed\"}`}>\n        {title}: <span className={`result`}>{JSON.stringify(passed)}</span>\n    </div>)\n}","import React, {Component} from 'react';\nimport './App.css';\nimport {\n    geCurrentPosition,\n    getResultDeviceTrust,\n    isGeoAvailable,\n    hasLiedIANATimezone,\n    watchPosition,\n    hasLiedTimeZoneOffset\n} from \"./services/geo\";\nimport {\n    devToolsOpen,\n    getBrowserData,\n    getLanguage,\n    getTimezone,\n    getTimezoneOffsetVsUTC,\n    getVideoCardInfo,\n    isMobile\n} from \"./services/hardware\";\nimport {Check} from \"./Check\";\nimport {Observation, ObservationTest} from \"./Observation\";\nimport * as finger from \"./services/fingerprint2\";\nimport {getHasLiedLanguages} from \"./services/fingerprint2\";\n\n\nconst csvRow = function(dataObject, heading) {\n    let dataArray = heading.map(hr => {\n        return dataObject.coords[hr] === null ? '' : dataObject.coords[hr].toString();\n    });\n    dataArray.push(dataObject.timestamp);\n    return dataArray.join(',') + '\\r\\n';\n};\n\nconst exportToCSV = function(id, name, arrData) {\n\n    if (!arrData.length) {\n        return;\n    }\n\n    let csvContent = \"data:text/csv;charset=utf-8,\";\n\n    let heading = \"latitude,longitude,accuracy,altitude,altitudeAccuracy,heading,speed\".split(\",\");\n    // headers\n    csvContent += heading.join(\",\") +',timestamp'+ '\\r\\n';\n\n    arrData.forEach(function(item){\n        csvContent += csvRow(item, heading);\n    });\n\n    let encodedUri = encodeURI(csvContent);\n    let link = document.createElement(\"a\");\n    link.setAttribute(\"href\", encodedUri);\n    link.setAttribute(\"download\", \"customers.csv\");\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n    link.click();\n    console.log(\"clicked\");\n};\n\nclass App extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            position: \"\",\n            error: \"\",\n            errorOne: \"\",\n            prevWatchPositions: [],\n            prevOnePositions: []\n        };\n        \n        this.handleWatchChanges = this.handleWatchChanges.bind(this);\n        this.handleWatchClick = this.handleWatchClick.bind(this);\n        this.handleOneClick = this.handleOneClick.bind(this);\n        this.handleOneChanges = this.handleOneChanges.bind(this);\n        this.downloadWatchCSV = this.downloadWatchCSV.bind(this);\n        this.downloadOneCSV = this.downloadOneCSV.bind(this);\n    }\n    \n    handleWatchChanges({position, error}) {\n        // this.setState({position: position, error: error});\n        if(!error){\n            let newEntry = {coords: {}, timestamp: position.timestamp};\n            for(let key in position.coords){\n                // if(position.coords.hasOwnProperty(key)){\n                    console.log(\"key: \", key, position.coords[key]);\n                    newEntry.coords[key] = position.coords[key];\n                // }\n            }\n            // {coords: position.coords, timestamp: position.timestamp}\n            this.setState({prevWatchPositions: [].concat([...this.state.prevWatchPositions], newEntry)});\n        } else {\n            this.setState({ error: error});\n        }\n    }\n    handleOneChanges({position, error}) {\n        // this.setState({position: position, error: error});\n        if(!error){\n            let newEntry = {coords: {}, timestamp: position.timestamp};\n            for(let key in position.coords){\n                // if(position.coords.hasOwnProperty(key)){\n                    console.log(\"key: \", key, position.coords[key]);\n                    newEntry.coords[key] = position.coords[key];\n                // }\n            }\n            // {coords: position.coords, timestamp: position.timestamp}\n            this.setState({prevOnePositions: [].concat([...this.state.prevOnePositions], newEntry)});\n        } else {\n            this.setState({ errorOne: error});\n        }\n    }\n\n    \n    handleWatchClick(e) {\n        watchPosition(this.handleWatchChanges);\n    }\n    handleOneClick() {\n        geCurrentPosition(this.handleOneChanges);\n    }\n    \n    componentDidMount() {\n        window.addEventListener('orientationchange', this.doOnOrientationChange);\n        this.doOnOrientationChange();\n    }\n    \n    doOnOrientationChange() {\n        if (window.innerHeight > window.innerWidth) {\n            console.log(\"portrait\");\n        } else {\n            console.log(\"landscape\")\n        }\n    }\n    downloadOneCSV(event) {\n        event.stopPropagation();\n        exportToCSV(\"downloadoneCSV\", \"getCurrentPosition\", this.state.prevOnePositions);\n        return false;\n    }\n    downloadWatchCSV(event) {\n        event.stopPropagation();\n        exportToCSV(\"downloadwatchCSV\", \"watchPosition\", this.state.prevWatchPositions);\n        return false;\n    }\n    \n    render() {\n        return (\n            <div className=\"App\">\n                <header>Geolocation</header>\n                <section className=\"side-container\">\n                    \n                    <div className={`head` + (getResultDeviceTrust() < 50 ? \" sad\" : \"\")}>\n                        <div className=\"face\">\n                            <div className=\"mouth\" />\n                            <div className=\"eye-group\">\n                                <div className=\"eye eye-left\" />\n                                <div className=\"eye eye-right\" />\n                            </div>\n                        </div>\n                    </div>\n\n                    <div>Device Confidence: {getResultDeviceTrust()}</div>\n                    {/*<Observation title={\"Is Mobile\"} value={JSON.stringify(isMobile())}/>*/}\n                    \n                    {/*<Observation title={\"Dev Tools\"} value={devToolsOpen()}/>*/}\n                    {/*<Observation title={\"Browser data\"} value={getBrowserData()}/>*/}\n                    {/*<Observation title={\"GPU\"} value={JSON.stringify(getVideoCardInfo())}/>*/}\n\n                    <div className={\"details\"}>\n\n                        <ObservationTest title={\"OS ok\"} passed={!finger.getHasLiedOs()}/>\n                        <ObservationTest title={\"Browser ok\"} passed={!finger.getHasLiedBrowser()}/>\n                        <ObservationTest title={\"Languages ok\"} passed={!finger.getHasLiedLanguages()}/>\n                        <ObservationTest title={\"Resolution ok\"} passed={!finger.getHasLiedResolution()}/>\n                        <ObservationTest\n                            title={`Timezone IANA`}\n                            passed={!hasLiedIANATimezone()}/>\n                        <ObservationTest\n                            title={`Timezone Offset`}\n                            passed={!hasLiedTimeZoneOffset()}/>\n\n                        <Observation title={\"Language\"} value={JSON.stringify(getLanguage())}/>\n\n                        <Observation title={\"Timezone Offset\"}\n                                     value={JSON.stringify(getTimezoneOffsetVsUTC()) + \"hr(s)\"}/>\n\n\n                        <br />\n                        <br />\n                        <br />\n                        <br />\n                        <br />\n                        <br />\n                        <br />\n                        <br />\n                        <br />\n                    </div>\n                    <div className={\"details\"}>\n                        <h1> Watch Position</h1>\n                        <button onClick={this.handleWatchClick}>Start Watching Geolocation</button>\n                        <code>{this.state.error}</code>\n\n                        <ul className={\"entries\"}>\n                            <li key={\"w0\"}>\n                                <code className={\"index-column\"}>#</code>\n                                <code>latitude</code>\n                                <code>longitude</code>\n                                <code>accuracy</code>\n                                <code>altitude</code>\n                                <code>altitudeAccuracy</code>\n                                <code>heading</code>\n                                <code>speed</code>\n                                <code>timestamp</code>\n                                {/*<code>Date: {this.state.position && (new Date(this.state.position.timestamp).toISOString(\"DD-MM-YYYY HH:mm:ss\"))}</code>*/}\n                            </li>\n                                {this.state.prevWatchPositions.map((pos, index) => (\n                                    <li key={\"w\" + index}>\n                                        <code className={\"index-column\"}>{index}.</code>\n                                        <code>{pos.coords.latitude}</code>\n                                        <code>{pos.coords.longitude}</code>\n                                        <code>{pos.coords.accuracy}m</code>\n                                        <code>{pos.coords.altitude}</code>\n                                        <code>{pos.coords.altitudeAccuracy}</code>\n                                        <code>{pos.coords.heading}</code>\n                                        <code>{pos.coords.speed}</code>\n                                        <code>+{pos.timestamp - this.state.prevWatchPositions[0].timestamp } {(pos.timestamp + \"\").length === 10 ? \"sec\" : \"ms\"}</code>\n                                        {/*<code>Date: {this.state.position && (new Date(this.state.position.timestamp).toISOString(\"DD-MM-YYYY HH:mm:ss\"))}</code>*/}\n                                    </li>))\n                                }\n                        </ul>\n                        <a id=\"downloadwatchCSV\" onClick={this.downloadWatchCSV}>Download CSV</a>\n\n                        <br />\n                        <br />\n                        <br />\n                        <br />\n                        <br />\n                        <br />\n                        <br />\n                        <br />\n                        <br />\n                        <h1> One time Position</h1>\n                        <button onClick={this.handleOneClick}>Get Quick Geolocation</button>\n                        <code>{this.state.error}</code>\n                        <ul className={\"entries\"}>\n                            <li key=\"0\">\n                                <code className={\"index-column\"}>#</code>\n                                <code>latitude</code>\n                                <code>longitude</code>\n                                <code>accuracy</code>\n                                <code>altitude</code>\n                                <code>altitudeAccuracy</code>\n                                <code>heading</code>\n                                <code>speed</code>\n                                <code>timestamp</code>\n                                {/*<code>Date: {this.state.position && (new Date(this.state.position.timestamp).toISOString(\"DD-MM-YYYY HH:mm:ss\"))}</code>*/}\n                            </li>\n                            {this.state.prevOnePositions && this.state.prevOnePositions.map((pos, index) => (\n                                <li key={index}>\n                                    <code className={\"index-column\"}>{index}.</code>\n                                    <code>{pos.coords.latitude}</code>\n                                    <code>{pos.coords.longitude}</code>\n                                    <code>{pos.coords.accuracy}m</code>\n                                    <code>{pos.coords.altitude}</code>\n                                    <code>{pos.coords.altitudeAccuracy}</code>\n                                    <code>{pos.coords.heading}</code>\n                                    <code>{pos.coords.speed}</code>\n                                    <code>+{pos.timestamp - this.state.prevOnePositions[0].timestamp } {(pos.timestamp + \"\").length === 10 ? \"sec\" : \"ms\"}</code>\n                                    {/*<code>Date: {this.state.position && (new Date(this.state.position.timestamp).toISOString(\"DD-MM-YYYY HH:mm:ss\"))}</code>*/}\n                                </li>))\n                            }\n                        </ul>\n                        <a id=\"downloadoneCSV\" onClick={this.downloadOneCSV}>Download CSV</a>\n                    </div>\n                </section>\n                <footer />\n            </div>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}